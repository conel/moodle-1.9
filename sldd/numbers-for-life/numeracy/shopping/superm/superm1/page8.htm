<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html>
<head><meta name="author" content="Created with Hot Potatoes by Half-Baked Software, registered to Laura Woodside-Jones."><meta name="keywords" content="Hot Potatoes, Half-Baked Software, Windows, University of Victoria"> 
<title>Ordering Weights (lightest to heaviest)</title>

<!--<body>Fool those dumb ad-inserting ISPs</body>-->

<style type="text/css">

BODY {
	font-family: Geneva,Arial;
	background-color: #ffffff;
	color: #000080;
}

DIV.Titles {
	position: absolute;
	left: 10%;
	width: 80%;
	text-align: center;
	top: 5px;
}

TD.NavBar{
	background-color: #000066;
	text-align: center;
}

DIV.CardStyle {
	position: absolute;
	font-family: Geneva,Arial;
	padding: 5px;
	border-style: solid;
	border-width: 1px;
	color: #000000;

	left: -50px;
	top: -50px;
	overflow: visible;
}

DIV.Feedback {
	background-color: #ffffff;
	left: 1px;
	top: 1px;
	z-index: 1;
	border-width: 1px;
	border-style: none;
	text-align: center;
	color: #000080;
	padding: 5px;
	position: absolute;
}

</style>

<script language="javascript" type="text/javascript">
<!--
//<![CDATA[

<!--

function BrowserCheck() {
	var b = navigator.appName
	this.mac = (navigator.appVersion.indexOf('Mac') != -1)
	if (b=="Netscape") this.b = 'ns'
	else if (b=="Microsoft Internet Explorer") this.b = 'ie'
	else this.b = b
	this.version = navigator.appVersion
	this.v = parseInt(this.version)
	this.ns = (this.b=="ns" && this.v>=5)
	this.ns5 = (this.b=="ns" && this.v==5)
	this.ns6 = (this.b=="ns" && this.v==5)
	this.ie = (this.b=="ie" && this.v>=4)
	this.ie4 = (this.version.indexOf('MSIE 4')>0)
	this.ie5 = (this.version.indexOf('MSIE 5')>0)
	if (this.mac) this.ie = this.ie5
	this.ie5mac = (this.ie5 && this.mac);
	this.min = (this.ns||this.ie)
}

is = new BrowserCheck();

if (is.min == false){
	alert('Your browser can\'t handle this page. You need NS6 or IE5.');
	history.back();
}

function Card(ID){
	this.elm=document.getElementById(ID);
	this.name=ID;
	this.css=this.elm.style;
	this.elm.style.left = 0 +'px';
	this.elm.style.top = 0 +'px';
	this.HomeL = 0;
	this.HomeT = 0;
	this.tag=-1;
	this.index=-1;
//	this.obj=ID+'Card';
//	eval(this.obj+'=this');
}

function CardGetL(){return parseInt(this.css.left)}
Card.prototype.GetL=CardGetL;

function CardGetT(){return parseInt(this.css.top)}
Card.prototype.GetT=CardGetT;

function CardGetW(){return parseInt(this.elm.offsetWidth)}
Card.prototype.GetW=CardGetW;

function CardGetH(){return parseInt(this.elm.offsetHeight)}
Card.prototype.GetH=CardGetH;

function CardGetB(){return this.GetT()+this.GetH()}
Card.prototype.GetB=CardGetB;

function CardGetR(){return this.GetL()+this.GetW()}
Card.prototype.GetR=CardGetR;

function CardSetL(NewL){this.css.left = NewL+'px'}
Card.prototype.SetL=CardSetL;

function CardSetT(NewT){this.css.top = NewT+'px'}
Card.prototype.SetT=CardSetT;

function CardSetW(NewW){this.css.width = NewW+'px'}
Card.prototype.SetW=CardSetW;

function CardSetH(NewH){this.css.height = NewH+'px'}
Card.prototype.SetH=CardSetH;

function CardInside(X,Y){
	var Result=false;
	if(X>=this.GetL()){if(X<=this.GetR()){if(Y>=this.GetT()){if(Y<=this.GetB()){Result=true;}}}}
	return Result;
}
Card.prototype.Inside=CardInside;

function CardSwapColours(){
	var c=this.css.backgroundColor;
	this.css.backgroundColor=this.css.color;
	this.css.color=c;
}
Card.prototype.SwapColours=CardSwapColours;

function CardHighlight(){
	this.css.backgroundColor='#000000';
	this.css.color='';
}
Card.prototype.Highlight=CardHighlight;

function CardUnhighlight(){
	this.css.backgroundColor='';
	this.css.color='#000000';
}
Card.prototype.Unhighlight=CardUnhighlight;

function CardOverlap(OtherCard){
	var smR=(this.GetR()<(OtherCard.GetR()+10))? this.GetR(): (OtherCard.GetR()+10);
	var lgL=(this.GetL()>OtherCard.GetL())? this.GetL(): OtherCard.GetL();
	var HDim=smR-lgL;
	if (HDim<1){return 0;}
	var smB=(this.GetB()<OtherCard.GetB())? this.GetB(): OtherCard.GetB();
	var lgT=(this.GetT()>OtherCard.GetT())? this.GetT(): OtherCard.GetT();
	var VDim=smB-lgT;
	if (VDim<1){return 0;}
	return (HDim*VDim);	
}
Card.prototype.Overlap=CardOverlap;

function CardDockToR(OtherCard){
	this.SetL(OtherCard.GetR() + 5);
	this.SetT(OtherCard.GetT());
}

Card.prototype.DockToR=CardDockToR;

function CardSetHome(){
	this.HomeL=this.GetL();
	this.HomeT=this.GetT();
}
Card.prototype.SetHome=CardSetHome;

function CardGoHome(){
	this.SetL(this.HomeL);
	this.SetT(this.HomeT);
}

Card.prototype.GoHome=CardGoHome;

var CorrectResponse = 'Correct! Well done.';
var IncorrectResponse = 'Sorry! Try again. Incorrect matches have been removed.';
var YourScoreIs = 'Your score is ';
var Correction = '[strCorrection]';
var DivWidth = 400; //default value
var FeedbackWidth = 200; //default
var ExBGColor = '';
var PageBGColor = '#ffffff';
var TextColor = '#000000';
var TitleColor = '#000080';
var Penalties = 0;

var CurrDrag = -1;
var topZ = 100;

function PageDim(){
//Get the page width and height
	this.W = 600;
	this.H = 400;
	if (is.ns) this.W = window.innerWidth;
	if (is.ie) this.W = document.body.clientWidth;
	if (is.ns) this.H = window.innerHeight;
	if (is.ie) this.H = document.body.clientHeight;
}

var pg = null;
var DivWidth = 600;
var DragWidth = 200;
var LeftColPos = 100;
var RightColPos = 500;
var DragTop = 120;



//Fixed and draggable card arrays
FC = new Array();
DC = new Array();

function doDrag(e) {
	if (CurrDrag == -1) {return};
	if (is.ie){var Ev = window.event}else{var Ev = e}
	var difX = Ev.clientX-window.lastX; 
	var difY = Ev.clientY-window.lastY; 
	var newX = DC[CurrDrag].GetL()+difX; 
	var newY = DC[CurrDrag].GetT()+difY; 
	DC[CurrDrag].SetL(newX); 
	DC[CurrDrag].SetT(newY);
	window.lastX = Ev.clientX; 
	window.lastY = Ev.clientY; 
	return true;
} 


function beginDrag(e, DragNum) { 
	CurrDrag = DragNum;
	if (is.ie){
		var Ev = window.event;
		document.onmousemove=doDrag;
		document.onmouseup=endDrag;
	}
	else{
		var Ev = e;
		window.onmousemove=doDrag; 
		window.onmouseup=endDrag;
	} 
	DC[CurrDrag].Highlight();
	topZ++;
	DC[CurrDrag].css.zIndex = topZ;
	window.lastX=Ev.clientX; 
	window.lastY=Ev.clientY;
	return true;  
} 

function endDrag(e) { 
	if (CurrDrag == -1) {return};
	DC[CurrDrag].Unhighlight();
	if (is.ie){document.onmousemove=null}else{window.onmousemove=null;}
	onEndDrag();	
	CurrDrag = -1;
	return true;
} 

function onEndDrag(){ 
//Is it dropped on any of the fixed cards?
	var Docked = false;
	var DropTarget = DroppedOnFixed(CurrDrag);
	if (DropTarget > -1){
//If so, send home any card that is currently docked there
		for (var i=0; i<DC.length; i++){
			if (DC[i].tag == DropTarget+1){
				DC[i].GoHome();
				DC[i].tag = 0;
				D[i][2] = 0;
			}
		}
//Dock the dropped card
		DC[CurrDrag].DockToR(FC[DropTarget]);
		D[CurrDrag][2] = F[DropTarget][1];
		DC[CurrDrag].tag = DropTarget+1;
		Docked = true;
	}

	if (Docked == false){
		DC[CurrDrag].GoHome();
		DC[CurrDrag].tag = 0;
		D[CurrDrag][2] = 0;
	}
} 

function DroppedOnFixed(DNum){
	var Result = -1;
	var OverlapArea = 0;
	var Temp = 0;
	for (var i=0; i<FC.length; i++){
		Temp = DC[DNum].Overlap(FC[i]);
		if (Temp > OverlapArea){
			OverlapArea = Temp;
			Result = i;
		}
	}
	return Result;
}

function StartUp(){

//Calculate page dimensions and positions
	pg = new PageDim();
	DivWidth = Math.floor((pg.W*4)/5);
	DragWidth = Math.floor((DivWidth*3)/10);
	LeftColPos = Math.floor(pg.W/10);
	RightColPos = pg.W - (DragWidth + LeftColPos);
	DragTop = parseInt(document.getElementById('TitleDiv').offsetHeight) + 10;

//Position the feedback div
	var CurrDiv = document.getElementById('FeedbackDiv');
	CurrDiv.style.top = DragTop + 5 + 'px';
	CurrDiv.style.left = Math.floor((pg.W)/3) + 'px';
	CurrDiv.style.width = Math.floor(pg.W/3) + 'px';
	CurrDiv.style.display = 'none';

//Shuffle the items on the right
	D = Shuffle(D);

	var CurrTop = DragTop;
	var TempInt = 0;
	var DropHome = 0;
	var Widest = 0;

	for (var i=0; i<F.length; i++){
		FC[i] = new Card('F' + i);
//		FC[i].SetW(DragWidth);
		FC[i].elm.innerHTML = F[i][0] + '<br clear="all" />'; //required for Navigator rendering bug with images

		if (FC[i].GetW() > Widest){
			Widest = FC[i].GetW();
		}
	}

	if (Widest > DragWidth){Widest = DragWidth;}

	CurrTop = DragTop;

	DragWidth = Math.floor((DivWidth-Widest)/2) - 24;
	RightColPos = DivWidth + LeftColPos - (DragWidth + 14);
	var Highest = 0;
	var WidestRight = 0;

	for (i=0; i<D.length; i++){
		DC[i] = new Card('D' + i);
		DC[i].elm.innerHTML = D[i][0] + '<br clear="all" />'; //required for Navigator rendering bug with images
		if (DC[i].GetW() > DragWidth){DC[i].SetW(DragWidth);}
		DC[i].css.cursor = 'move';
		DC[i].css.backgroundColor = '';
		DC[i].css.color = '#000000';
		TempInt = DC[i].GetH();
		if (TempInt > Highest){Highest = TempInt;}
		TempInt = DC[i].GetW();
		if (TempInt > WidestRight){WidestRight = TempInt;}
	}

	var HeightToSet = Highest;
	if (is.ns||is.ie5mac){HeightToSet -= 12;}
	var WidthToSet = WidestRight;
	if (is.ns||is.ie5mac){WidthToSet -= 12;}

	for (i=0; i<D.length; i++){
		DC[i].SetT(CurrTop);
		DC[i].SetL(RightColPos);
		if (DC[i].GetH() < Highest){
			DC[i].SetH(HeightToSet);
		}
		if (DC[i].GetW() < WidestRight){
			DC[i].SetW(WidthToSet);
		}
		DC[i].SetHome();
		DC[i].tag = -1;
		CurrTop = CurrTop + DC[i].GetH() + 5;
	}

	CurrTop = DragTop;

	for (var i=0; i<F.length; i++){
		FC[i].SetW(Widest);
		if (FC[i].GetH() < Highest){
			FC[i].SetH(HeightToSet);
		}
		FC[i].SetT(CurrTop);
		FC[i].SetL(LeftColPos);
		FC[i].SetHome();
		TempInt = FC[i].GetH();
		CurrTop = CurrTop + TempInt + 5;
	}


}



F = new Array();
F[0] = new Array()
F[0][0]='1.';
F[0][1] = 1;
F[1] = new Array()
F[1][0]='2.';
F[1][1] = 2;
F[2] = new Array()
F[2][0]='3.';
F[2][1] = 3;
F[3] = new Array()
F[3][0]='4. ';
F[3][1] = 4;
F[4] = new Array()
F[4][0]='5.';
F[4][1] = 5;


D = new Array();
D[0] = new Array()
D[0][0]='<img src="images/cabbage2.gif" alt="cabbage2.gif" width="51" height="44" align="left" border="0"></img>   1.30 Kg';
D[0][1] = 1;
D[0][2] = 0;
D[1] = new Array()
D[1][0]='<img src="images/carrots2.gif" alt="carrots2.gif" width="75" height="46" align="left" border="0"></img>      1.50 Kg';
D[1][1] = 2;
D[1][2] = 0;
D[2] = new Array()
D[2][0]='<img src="images/parsnip2.gif" alt="parsnip2.gif" width="90" height="32" align="left" border="0"></img>   2.80 Kg';
D[2][1] = 3;
D[2][2] = 0;
D[3] = new Array()
D[3][0]='<img src="images/onion2.gif" alt="onion2.gif" width="65" height="47" align="left" border="0"></img>   3.40 Kg';
D[3][1] = 4;
D[3][2] = 0;
D[4] = new Array()
D[4][0]='<img src="images/potato2.gif" alt="potato2.gif" width="103" height="40" align="left" border="0"></img>   5.00 Kg';
D[4][1] = 5;
D[4][2] = 0;


function Shuffle(InArray){
	Temp = new Array();
	var Len = InArray.length;

	var j = Len;

	for (var i=0; i<Len; i++){
		Temp[i] = InArray[i];
	}

	for (i=0; i<Len; i++){
		Num = Math.floor(j  *  Math.random());
		InArray[i] = Temp[Num];

		for (var k=Num; k < j; k++) {
			Temp[k] = Temp[k+1];
		}
		j--;
	}
	return InArray;
}

function TimerStartUp(){
	setTimeout('StartUp()', 300);
}

function CheckAnswer(){
//Set the default score and response
	var TotalCorrect = 0;
	var Score = 0;
	var Response = '';

//for each fixed, check to see if the tag value for the draggable is the same as the fixed
	var i, j;
	for (i=0; i<D.length; i++){
		if ((D[i][2] == D[i][1])&&(D[i][2] > 0)){
			TotalCorrect++;
		}
		else{
			DC[i].GoHome();
		}
	}

	Score = Math.floor((100*(TotalCorrect-Penalties))/F.length);

	if (TotalCorrect == F.length) {
		Response = YourScoreIs + ' ' + Score + '%.<br />' + CorrectResponse;
		WriteFeedback(Response);

	}
	else {
		Response = IncorrectResponse + '<br />' + YourScoreIs + ' ' + Score + '%.';
		WriteFeedback(Response);
		Penalties++; // Penalty for inaccurate check
	}
}

function WriteFeedback(Feedback){
	var Output = Feedback + '<br /><br />';
	Output += '<form><input type="button" value="OK"';
	Output += ' onclick="HideFeedback()"></form>';
	var FDiv = document.getElementById('FeedbackDiv');
	FDiv.innerHTML = Output;
//Calculate and set its left setting
//	FDiv.style.left = ((Math.floor(pg.W/2))-(Math.floor(GetRealWidth('FeedbackDiv')/2))) +'px';
	topZ++;
	FDiv.style.zIndex = topZ;
//Add a border to the feedback div
	document.getElementById('FeedbackDiv').style.borderStyle = 'solid';
	FDiv.style.display='';
}

function HideFeedback(){
	var FDiv = document.getElementById('FeedbackDiv');
	FDiv.innerHTML = '';
	FDiv.style.display='none';
}



//-->

//]]>

function MM_controlSound(x, _sndObj, sndFile) { //v3.0
  var i, method = "", sndObj = eval(_sndObj);
  if (sndObj != null) {
    if (navigator.appName == 'Netscape') method = "play";
    else {
      if (window.MM_WMP == null) {
        window.MM_WMP = false;
        for(i in sndObj) if (i == "ActiveMovie") {
          window.MM_WMP = true; break;
      } }
      if (window.MM_WMP) method = "play";
      else if (sndObj.FileName) method = "run";
  } }
  if (method) eval(_sndObj+"."+method+"()");
  else window.location = sndFile;
}

function MM_controlSound(x, _sndObj, sndFile) { //v3.0
  var i, method = "", sndObj = eval(_sndObj);
  if (sndObj != null) {
    if (navigator.appName == 'Netscape') method = "play";
    else {
      if (window.MM_WMP == null) {
        window.MM_WMP = false;
        for(i in sndObj) if (i == "ActiveMovie") {
          window.MM_WMP = true; break;
      } }
      if (window.MM_WMP) method = "play";
      else if (sndObj.FileName) method = "run";
  } }
  if (method) eval(_sndObj+"."+method+"()");
  else window.location = sndFile;
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_preloadImages() { //v3.0
  var d=document; if(d.images){ if(!d.MM_p) d.MM_p=new Array();
    var i,j=d.MM_p.length,a=MM_preloadImages.arguments; for(i=0; i<a.length; i++)
    if (a[i].indexOf("#")!=0){ d.MM_p[j]=new Image; d.MM_p[j++].src=a[i];}}
}

function MM_swapImgRestore() { //v3.0
  var i,x,a=document.MM_sr; for(i=0;a&&i<a.length&&(x=a[i])&&x.oSrc;i++) x.src=x.oSrc;
}

function MM_findObj(n, d) { //v4.0
  var p,i,x;  if(!d) d=document; if((p=n.indexOf("?"))>0&&parent.frames.length) {
    d=parent.frames[n.substring(p+1)].document; n=n.substring(0,p);}
  if(!(x=d[n])&&d.all) x=d.all[n]; for (i=0;!x&&i<d.forms.length;i++) x=d.forms[i][n];
  for(i=0;!x&&d.layers&&i<d.layers.length;i++) x=MM_findObj(n,d.layers[i].document);
  if(!x && document.getElementById) x=document.getElementById(n); return x;
}

function MM_swapImage() { //v3.0
  var i,j=0,x,a=MM_swapImage.arguments; document.MM_sr=new Array; for(i=0;i<(a.length-2);i+=3)
   if ((x=MM_findObj(a[i]))!=null){document.MM_sr[j++]=x; if(!x.oSrc) x.oSrc=x.src; x.src=a[i+2];}
}
//-->
</script>
<link rel="stylesheet" href="../sound.css" type="text/css">
</head> 

<body onload="TimerStartUp();MM_preloadImages('../../images/nextb.gif','../../images/backb.gif')" background="">
<div class="Titles" id="TitleDiv" style="left: 71px; top: 90px; width: 551px; height: 367px"> 
  <center>
    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
    <br>
    <h3>Ordering Weights (lightest to heaviest)</h3>
    Matching exercise. Drag the vegetables on the right to the number on the left 
    by order of weight. Start with the lightest and end with the heaviest. Click 
    'Check' when you have finished.<br />
    <form action="">
      <input type="button" value="Check" onclick="CheckAnswer()">
    </form>
  </center>
</div>
<div class="Feedback" id="FeedbackDiv" style="left: -1px; top: 99px"></div>
<blockquote> 
  <P> 
  <TD HEIGHT="29" WIDTH="45%"> 
    <table width="548">
      <tr> 
        <td width="184"><img src="../../images/supermc.gif" alt="Supermarket"></td>
        <td width="377"> 
          <table width="240" align="center">
            <tr> 
              <td><a href="../../../intro/frontp2.htm"
						 onMouseOut="MM_swapImgRestore()"
						 onMouseOver="MM_swapImage('Image7','','../../images/homeb.gif',1)"><img
					 name="Image7" border="0" src="../../images/home.gif" width="56" height="15" alt="home"></a></td>
              <td><a href="../../../intro/index2.htm"><img
					 name="Image8" border="0" src="../../images/index.gif" width="53"
				height="16" alt="index"></a></td>
            </tr>
          </table>
        </td>
        <td width="13"><img src="../images/cartp.gif" alt="revision"></td>
      </tr>
    </table>
  </TD>
  <font face="Arial, Helvetica, sans-serif" size="4" color="#990099"><img src="../../images/sound.gif" width="27" height="27" onMouseDown="MM_controlSound('play','document.CS1020497396190','audio/page8.mp3')" class="sound" alt="audio button"> 
  Exercise 1b (cont).</font><font face="Arial, Helvetica, sans-serif" size="4" color="#990099"> 
  Weighing fruit & veg <img src="../images/pencil.gif" width="41" height="48" alt="pencil"></font> 
  <form name="form1" method="post" action="">
    Name: 
    <input type="text" name="textfield" size="30">
    <br>
  </form>
  <form name="form2" method="post" action="">
    Date: 
    <input type="text" name="textfield2">
  </form>
  <br>
  <br>
  <br>
  <br>
  <br>
  <br>
  <br>
  <br>
  <br>
  <br>
  <br>
  <br>
  <br>
  <br>
</blockquote>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<br>
<script language="javascript" type="text/javascript">

//<![CDATA[

<!--

for (var i=0; i<F.length; i++){
	document.write('<div id="F' + i + '" class="CardStyle"></div>');
}

for (var i=0; i<D.length; i++){
	document.write('<div id="D' + i + '" class="CardStyle" onmousedown="beginDrag(event, ' + i + ')"></div>');
}

//-->

//]]>
</script>
<blockquote> 
  <p><font face="Arial, Helvetica, sans-serif"><img src="../../images/sound.gif" width="27" height="27" alt="audio button" onMouseDown="MM_controlSound('play','document.CS1020453830880','../print.mp3')" class="sound"> 
    Print this page and place it in your folder.<br>
    </font></p>
  <TABLE WIDTH="110">
    <TR> 
      <TD><a href="page7.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('Back','','../../images/backb.gif',1)"><img name="Back" border="0" src="../../images/back.gif" width="43" height="15" alt="Back"></a></TD>
      <TD><a href="../superm2/index.htm" onMouseOut="MM_swapImgRestore()" onMouseOver="MM_swapImage('Next','','../../images/nextb.gif',1)"><img name="Next" border="0" src="../../images/next.gif" width="42" height="14" alt="Next"></a></TD>
    </TR>
  </TABLE>
  <br>
  <table width="573">
    <tr>
      <td align="center"><font size="2" face="Arial, Helvetica, sans-serif"><a href="index.htm">Weighing 
        fruit &amp; veg</a> | <a href="../superm2/index.htm">Digital scales</a> 
        | <a href="../superm3/index.htm">Date stamp</a> | <a href="../superm4/index.htm">Sell-by 
        date</a> | <a href="../superm5/index.htm">Sizes of medicine</a> | <a href="../superm6/index.htm">Volume 
        of liquids</a> | <a href="../superm7/index.htm">Rounding prices</a> | 
        <a href="../superm8/index.htm">Paying bill at checkout</a></font></td>
    </tr>
  </table>
 
</blockquote>
<EMBED NAME='CS1020453830880' SRC='../print.mp3' LOOP=false 
AUTOSTART=false MASTERSOUND HIDDEN=true WIDTH=0 HEIGHT=0>
</EMBED> <EMBED NAME='CS1020497396190' SRC='audio/page8.mp3' LOOP=false 
AUTOSTART=false MASTERSOUND HIDDEN=true WIDTH=0 HEIGHT=0>
</EMBED> 
</body>
</html>
