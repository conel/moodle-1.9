<!DOCTYPE HTML PUBLIC "-//SoftQuad Software//DTD HoTMetaL PRO 6.0::19990601::extensions to HTML 4.0//EN" "hmpro6.dtd">
<HTML> 
  <HEAD>
<TITLE>SMall: Travel shop</TITLE>
<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">

<style type="text/css">

BODY {
	font-family: Geneva,Arial;
	background-color: #ffffff;
	color: #000033;
}

DIV.Titles {
	position: absolute;
	left: 10%;
	width: 80%;
	text-align: center;
	top: 5px;
}

TD.NavBar{
	background-color: #000066;
	text-align: center;
}

DIV.CardStyle {
	position: absolute;
	font-family: Geneva,Arial;
	padding: 5px;
	border-style: solid;
	border-width: 1px;
	color: #000000;

	left: -50px;
	top: -50px;
	overflow: visible;
}

DIV.Feedback {
	background-color: #ffffff;
	left: 1px;
	top: 1px;
	z-index: 1;
	border-width: 1px;
	border-style: none;
	text-align: center;
	color: #000033;
	padding: 5px;
	position: absolute;
}

</style>
<script language="javascript" type="text/javascript">
<!--
//<![CDATA[

<!--

function BrowserCheck() {
	var b = navigator.appName
	this.mac = (navigator.appVersion.indexOf('Mac') != -1)
	if (b=="Netscape") this.b = 'ns'
	else if (b=="Microsoft Internet Explorer") this.b = 'ie'
	else this.b = b
	this.version = navigator.appVersion
	this.v = parseInt(this.version)
	this.ns = (this.b=="ns" && this.v>=5)
	this.ns5 = (this.b=="ns" && this.v==5)
	this.ns6 = (this.b=="ns" && this.v==5)
	this.ie = (this.b=="ie" && this.v>=4)
	this.ie4 = (this.version.indexOf('MSIE 4')>0)
	this.ie5 = (this.version.indexOf('MSIE 5')>0)
	if (this.mac) this.ie = this.ie5
	this.ie5mac = (this.ie5 && this.mac);
	this.min = (this.ns||this.ie)
}

is = new BrowserCheck();

if (is.min == false){
	alert('Your browser can\'t handle this page. You need NS6 or IE5.');
	history.back();
}

function Card(ID){
	this.elm=document.getElementById(ID);
	this.name=ID;
	this.css=this.elm.style;
	this.elm.style.left = 0 +'px';
	this.elm.style.top = 0 +'px';
	this.HomeL = 0;
	this.HomeT = 0;
	this.tag=-1;
	this.index=-1;
//	this.obj=ID+'Card';
//	eval(this.obj+'=this');
}

function CardGetL(){return parseInt(this.css.left)}
Card.prototype.GetL=CardGetL;

function CardGetT(){return parseInt(this.css.top)}
Card.prototype.GetT=CardGetT;

function CardGetW(){return parseInt(this.elm.offsetWidth)}
Card.prototype.GetW=CardGetW;

function CardGetH(){return parseInt(this.elm.offsetHeight)}
Card.prototype.GetH=CardGetH;

function CardGetB(){return this.GetT()+this.GetH()}
Card.prototype.GetB=CardGetB;

function CardGetR(){return this.GetL()+this.GetW()}
Card.prototype.GetR=CardGetR;

function CardSetL(NewL){this.css.left = NewL+'px'}
Card.prototype.SetL=CardSetL;

function CardSetT(NewT){this.css.top = NewT+'px'}
Card.prototype.SetT=CardSetT;

function CardSetW(NewW){this.css.width = NewW+'px'}
Card.prototype.SetW=CardSetW;

function CardSetH(NewH){this.css.height = NewH+'px'}
Card.prototype.SetH=CardSetH;

function CardInside(X,Y){
	var Result=false;
	if(X>=this.GetL()){if(X<=this.GetR()){if(Y>=this.GetT()){if(Y<=this.GetB()){Result=true;}}}}
	return Result;
}
Card.prototype.Inside=CardInside;

function CardSwapColours(){
	var c=this.css.backgroundColor;
	this.css.backgroundColor=this.css.color;
	this.css.color=c;
}
Card.prototype.SwapColours=CardSwapColours;

function CardHighlight(){
	this.css.backgroundColor='#000000';
	this.css.color='';
}
Card.prototype.Highlight=CardHighlight;

function CardUnhighlight(){
	this.css.backgroundColor='';
	this.css.color='#000000';
}
Card.prototype.Unhighlight=CardUnhighlight;

function CardOverlap(OtherCard){
	var smR=(this.GetR()<(OtherCard.GetR()+10))? this.GetR(): (OtherCard.GetR()+10);
	var lgL=(this.GetL()>OtherCard.GetL())? this.GetL(): OtherCard.GetL();
	var HDim=smR-lgL;
	if (HDim<1){return 0;}
	var smB=(this.GetB()<OtherCard.GetB())? this.GetB(): OtherCard.GetB();
	var lgT=(this.GetT()>OtherCard.GetT())? this.GetT(): OtherCard.GetT();
	var VDim=smB-lgT;
	if (VDim<1){return 0;}
	return (HDim*VDim);	
}
Card.prototype.Overlap=CardOverlap;

function CardDockToR(OtherCard){
	this.SetL(OtherCard.GetR() + 5);
	this.SetT(OtherCard.GetT());
}

Card.prototype.DockToR=CardDockToR;

function CardSetHome(){
	this.HomeL=this.GetL();
	this.HomeT=this.GetT();
}
Card.prototype.SetHome=CardSetHome;

function CardGoHome(){
	this.SetL(this.HomeL);
	this.SetT(this.HomeT);
}

Card.prototype.GoHome=CardGoHome;

var CorrectResponse = 'Correct! Well done.';
var IncorrectResponse = 'Sorry! Try again. Incorrect matches have been removed.';
var YourScoreIs = 'Your score is ';
var Correction = '[strCorrection]';
var DivWidth = 400; //default value
var FeedbackWidth = 200; //default
var ExBGColor = '';
var PageBGColor = '#ffffff';
var TextColor = '#000000';
var TitleColor = '#000033';
var Penalties = 0;

var CurrDrag = -1;
var topZ = 100;

function PageDim(){
//Get the page width and height
	this.W = 600;
	this.H = 400;
	if (is.ns) this.W = window.innerWidth;
	if (is.ie) this.W = document.body.clientWidth;
	if (is.ns) this.H = window.innerHeight;
	if (is.ie) this.H = document.body.clientHeight;
}

var pg = null;
var DivWidth = 600;
var DragWidth = 200;
var LeftColPos = 100;
var RightColPos = 500;
var DragTop = 120;



//Fixed and draggable card arrays
FC = new Array();
DC = new Array();

function doDrag(e) {
	if (CurrDrag == -1) {return};
	if (is.ie){var Ev = window.event}else{var Ev = e}
	var difX = Ev.clientX-window.lastX; 
	var difY = Ev.clientY-window.lastY; 
	var newX = DC[CurrDrag].GetL()+difX; 
	var newY = DC[CurrDrag].GetT()+difY; 
	DC[CurrDrag].SetL(newX); 
	DC[CurrDrag].SetT(newY);
	window.lastX = Ev.clientX; 
	window.lastY = Ev.clientY; 
	return true;
} 


function beginDrag(e, DragNum) { 
	CurrDrag = DragNum;
	if (is.ie){
		var Ev = window.event;
		document.onmousemove=doDrag;
		document.onmouseup=endDrag;
	}
	else{
		var Ev = e;
		window.onmousemove=doDrag; 
		window.onmouseup=endDrag;
	} 
	DC[CurrDrag].Highlight();
	topZ++;
	DC[CurrDrag].css.zIndex = topZ;
	window.lastX=Ev.clientX; 
	window.lastY=Ev.clientY;
	return true;  
} 

function endDrag(e) { 
	if (CurrDrag == -1) {return};
	DC[CurrDrag].Unhighlight();
	if (is.ie){document.onmousemove=null}else{window.onmousemove=null;}
	onEndDrag();	
	CurrDrag = -1;
	return true;
} 

function onEndDrag(){ 
//Is it dropped on any of the fixed cards?
	var Docked = false;
	var DropTarget = DroppedOnFixed(CurrDrag);
	if (DropTarget > -1){
//If so, send home any card that is currently docked there
		for (var i=0; i<DC.length; i++){
			if (DC[i].tag == DropTarget+1){
				DC[i].GoHome();
				DC[i].tag = 0;
				D[i][2] = 0;
			}
		}
//Dock the dropped card
		DC[CurrDrag].DockToR(FC[DropTarget]);
		D[CurrDrag][2] = F[DropTarget][1];
		DC[CurrDrag].tag = DropTarget+1;
		Docked = true;
	}

	if (Docked == false){
		DC[CurrDrag].GoHome();
		DC[CurrDrag].tag = 0;
		D[CurrDrag][2] = 0;
	}
} 

function DroppedOnFixed(DNum){
	var Result = -1;
	var OverlapArea = 0;
	var Temp = 0;
	for (var i=0; i<FC.length; i++){
		Temp = DC[DNum].Overlap(FC[i]);
		if (Temp > OverlapArea){
			OverlapArea = Temp;
			Result = i;
		}
	}
	return Result;
}

function StartUp(){

//Calculate page dimensions and positions
	pg = new PageDim();
	DivWidth = Math.floor((pg.W*4)/5);
	DragWidth = Math.floor((DivWidth*3)/10);
	LeftColPos = Math.floor(pg.W/10);
	RightColPos = pg.W - (DragWidth + LeftColPos);
	DragTop = parseInt(document.getElementById('TitleDiv').offsetHeight) + 10;

//Position the feedback div
	var CurrDiv = document.getElementById('FeedbackDiv');
	CurrDiv.style.top = DragTop + 5 + 'px';
	CurrDiv.style.left = Math.floor((pg.W)/3) + 'px';
	CurrDiv.style.width = Math.floor(pg.W/3) + 'px';
	CurrDiv.style.display = 'none';

//Shuffle the items on the right
	D = Shuffle(D);

	var CurrTop = DragTop;
	var TempInt = 0;
	var DropHome = 0;
	var Widest = 0;

	for (var i=0; i<F.length; i++){
		FC[i] = new Card('F' + i);
//		FC[i].SetW(DragWidth);
		FC[i].elm.innerHTML = F[i][0] + '<br clear="all" />'; //required for Navigator rendering bug with images

		if (FC[i].GetW() > Widest){
			Widest = FC[i].GetW();
		}
	}

	if (Widest > DragWidth){Widest = DragWidth;}

	CurrTop = DragTop;

	DragWidth = Math.floor((DivWidth-Widest)/2) - 24;
	RightColPos = DivWidth + LeftColPos - (DragWidth + 14);
	var Highest = 0;
	var WidestRight = 0;

	for (i=0; i<D.length; i++){
		DC[i] = new Card('D' + i);
		DC[i].elm.innerHTML = D[i][0] + '<br clear="all" />'; //required for Navigator rendering bug with images
		if (DC[i].GetW() > DragWidth){DC[i].SetW(DragWidth);}
		DC[i].css.cursor = 'move';
		DC[i].css.backgroundColor = '';
		DC[i].css.color = '#000000';
		TempInt = DC[i].GetH();
		if (TempInt > Highest){Highest = TempInt;}
		TempInt = DC[i].GetW();
		if (TempInt > WidestRight){WidestRight = TempInt;}
	}

	var HeightToSet = Highest;
	if (is.ns||is.ie5mac){HeightToSet -= 12;}
	var WidthToSet = WidestRight;
	if (is.ns||is.ie5mac){WidthToSet -= 12;}

	for (i=0; i<D.length; i++){
		DC[i].SetT(CurrTop);
		DC[i].SetL(RightColPos);
		if (DC[i].GetH() < Highest){
			DC[i].SetH(HeightToSet);
		}
		if (DC[i].GetW() < WidestRight){
			DC[i].SetW(WidthToSet);
		}
		DC[i].SetHome();
		DC[i].tag = -1;
		CurrTop = CurrTop + DC[i].GetH() + 5;
	}

	CurrTop = DragTop;

	for (var i=0; i<F.length; i++){
		FC[i].SetW(Widest);
		if (FC[i].GetH() < Highest){
			FC[i].SetH(HeightToSet);
		}
		FC[i].SetT(CurrTop);
		FC[i].SetL(LeftColPos);
		FC[i].SetHome();
		TempInt = FC[i].GetH();
		CurrTop = CurrTop + TempInt + 5;
	}


}



F = new Array();
F[0] = new Array()
F[0][0]='<img src="images/16deg.gif" alt="16deg.gif" width="52" height="87" align="left" border="0"></img>';
F[0][1] = 1;
F[1] = new Array()
F[1][0]='<img src="images/17deg.gif" alt="17deg.gif" width="52" height="87" align="left" border="0"></img>';
F[1][1] = 2;
F[2] = new Array()
F[2][0]='<img src="images/10deg.gif" alt="10deg.gif" width="52" height="88" align="left" border="0"></img>';
F[2][1] = 3;
F[3] = new Array()
F[3][0]='<img src="images/19deg.gif" alt="19deg.gif" width="52" height="87" align="left" border="0"></img>';
F[3][1] = 4;
F[4] = new Array()
F[4][0]='<img src="images/18deg.gif" alt="18deg.gif" width="52" height="87" align="left" border="0"></img>';
F[4][1] = 5;


D = new Array();
D[0] = new Array()
D[0][0]='16&deg';
D[0][1] = 1;
D[0][2] = 0;
D[1] = new Array()
D[1][0]='17&deg;';
D[1][1] = 2;
D[1][2] = 0;
D[2] = new Array()
D[2][0]='10&deg';
D[2][1] = 3;
D[2][2] = 0;
D[3] = new Array()
D[3][0]='19&deg';
D[3][1] = 4;
D[3][2] = 0;
D[4] = new Array()
D[4][0]='18&deg';
D[4][1] = 5;
D[4][2] = 0;


function Shuffle(InArray){
	Temp = new Array();
	var Len = InArray.length;

	var j = Len;

	for (var i=0; i<Len; i++){
		Temp[i] = InArray[i];
	}

	for (i=0; i<Len; i++){
		Num = Math.floor(j  *  Math.random());
		InArray[i] = Temp[Num];

		for (var k=Num; k < j; k++) {
			Temp[k] = Temp[k+1];
		}
		j--;
	}
	return InArray;
}

function TimerStartUp(){
	setTimeout('StartUp()', 300);
}

function CheckAnswer(){
//Set the default score and response
	var TotalCorrect = 0;
	var Score = 0;
	var Response = '';

//for each fixed, check to see if the tag value for the draggable is the same as the fixed
	var i, j;
	for (i=0; i<D.length; i++){
		if ((D[i][2] == D[i][1])&&(D[i][2] > 0)){
			TotalCorrect++;
		}
		else{
			DC[i].GoHome();
		}
	}

	Score = Math.floor((100*(TotalCorrect-Penalties))/F.length);

	if (TotalCorrect == F.length) {
		Response = YourScoreIs + ' ' + Score + '%.<br />' + CorrectResponse;
		WriteFeedback(Response);

	}
	else {
		Response = IncorrectResponse + '<br />' + YourScoreIs + ' ' + Score + '%.';
		WriteFeedback(Response);
		Penalties++; // Penalty for inaccurate check
	}
}

function WriteFeedback(Feedback){
	var Output = Feedback + '<br /><br />';
	Output += '<form><input type="button" value="OK"';
	Output += ' onclick="HideFeedback()"></form>';
	var FDiv = document.getElementById('FeedbackDiv');
	FDiv.innerHTML = Output;
//Calculate and set its left setting
//	FDiv.style.left = ((Math.floor(pg.W/2))-(Math.floor(GetRealWidth('FeedbackDiv')/2))) +'px';
	topZ++;
	FDiv.style.zIndex = topZ;
//Add a border to the feedback div
	document.getElementById('FeedbackDiv').style.borderStyle = 'solid';
	FDiv.style.display='';
}

function HideFeedback(){
	var FDiv = document.getElementById('FeedbackDiv');
	FDiv.innerHTML = '';
	FDiv.style.display='none';
}



//-->

//]]>

function MM_controlSound(x, _sndObj, sndFile) { //v3.0
  var i, method = "", sndObj = eval(_sndObj);
  if (sndObj != null) {
    if (navigator.appName == 'Netscape') method = "play";
    else {
      if (window.MM_WMP == null) {
        window.MM_WMP = false;
        for(i in sndObj) if (i == "ActiveMovie") {
          window.MM_WMP = true; break;
      } }
      if (window.MM_WMP) method = "play";
      else if (sndObj.FileName) method = "run";
  } }
  if (method) eval(_sndObj+"."+method+"()");
  else window.location = sndFile;
}

function MM_controlSound(x, _sndObj, sndFile) { //v3.0
  var i, method = "", sndObj = eval(_sndObj);
  if (sndObj != null) {
    if (navigator.appName == 'Netscape') method = "play";
    else {
      if (window.MM_WMP == null) {
        window.MM_WMP = false;
        for(i in sndObj) if (i == "ActiveMovie") {
          window.MM_WMP = true; break;
      } }
      if (window.MM_WMP) method = "play";
      else if (sndObj.FileName) method = "run";
  } }
  if (method) eval(_sndObj+"."+method+"()");
  else window.location = sndFile;
}
//-->
</script>
<link rel="stylesheet" href="../mall4/sound.css" type="text/css">
</HEAD> 
  
<BODY BGCOLOR="#FFFFFF" TEXT="#000000"
	BACKGROUND=""
	ONLOAD="TimerStartUp()">
<TABLE WIDTH="500" ALIGN="center">
  <TR> 
    <TD width="250"><img src="../../images/mallc.gif" WIDTH="213"
			 HEIGHT="32" alt="Shopping Mall"></TD>
    <TD ALIGN="RIGHT" width="160"> 
      <TABLE WIDTH="161">
        <TR> 
          <TD HEIGHT="29" WIDTH="59%"><A HREF="../../../intro/frontp2.htm"
					 ONMOUSEOUT="MM_swapImgRestore()"
					 ONMOUSEOVER="MM_swapImage('Image7','','../../images/homeb.gif',1)"><IMG
					 NAME="Image7" BORDER="0" SRC="../../images/home.gif" width="56" height="15" alt="home"></A></TD>
          <TD HEIGHT="29" WIDTH="41%"><A HREF="../../../intro/index2.htm"
					 ONMOUSEOUT="MM_swapImgRestore()"
					 ONMOUSEOVER="MM_swapImage('Image8','','../../images/indexb.gif',1)"><IMG
					 NAME="Image8" BORDER="0" SRC="../../images/index.gif" WIDTH="53"
				HEIGHT="16" alt="index"></A></TD>
        </TR>
      </TABLE>
    </TD>
    <TD width="74"> 
      <div align="right"><a href="javascript:void(window.open('revision.htm', '','width=600,height=500, scrolling=yes, scrollbars=yes, screenX=1,screenY=1,top=1,left=80'))"><img src="../../images/cartbl.gif" width="44" height="44" alt="revision" border="0"></a></div>
    </TD>
  </TR>
  <TR> 
    <TD COLSPAN="2" bordercolor="#000000"> 
      <P><font face="Arial, Helvetica, sans-serif" size="4" color="#0000FF"><img src="../../images/sound.gif" width="27" height="27" alt="audio button" onMouseDown="MM_controlSound('play','document.CS1021044169210','audio/page9.mp3')" class="sound"> 
        Exercise 5 (cont). Travel shop</font><font face="Arial, Helvetica, sans-serif" size="4"
				color="#0000FF"> <IMG SRC="../mall1/images/pencil.gif" WIDTH="41"
				HEIGHT="48" ALT="pencil"><br>
        <br>
        Question 6 </font></P>
      <FORM NAME="form2" METHOD="post" ACTION="">
        <P><FONT FACE="Arial, Helvetica, sans-serif">Name:</FONT> 
          <INPUT TYPE="text" NAME="textfield" SIZE="40">
        </P>
      </FORM>
      <FORM NAME="form3" METHOD="post" ACTION="">
        <P><FONT FACE="Arial, Helvetica, sans-serif"> Date:</FONT>&nbsp;&nbsp; 
          <INPUT TYPE="text" NAME="textfield2">
        </P>
      </FORM>
      <P><font face="Arial, Helvetica, sans-serif">According to the temperature 
        chart, the following places are cool:</font></P>
      <table width="150" cellpadding="1" bordercolor="#000000" border="1">
        <tr bgcolor="#D5E8FD" bordercolor="1"> 
          <td><font face="Arial, Helvetica, sans-serif"><b>Destination</b></font></td>
          <td><font face="Arial, Helvetica, sans-serif"><b>&deg;C</b></font></td>
        </tr>
        <tr bgcolor="#D5E8FD" bordercolor="1"> 
          <td><font face="Arial, Helvetica, sans-serif">Bordeaux</font></td>
          <td><font face="Arial, Helvetica, sans-serif">19</font></td>
        </tr>
        <tr bgcolor="#D5E8FD" bordercolor="1"> 
          <td><font face="Arial, Helvetica, sans-serif">Helsinki</font></td>
          <td><font face="Arial, Helvetica, sans-serif">17</font></td>
        </tr>
        <tr bgcolor="#D5E8FD" bordercolor="1"> 
          <td><font face="Arial, Helvetica, sans-serif">Moscow</font></td>
          <td><font face="Arial, Helvetica, sans-serif">10</font></td>
        </tr>
        <tr bgcolor="#D5E8FD" bordercolor="1"> 
          <td><font face="Arial, Helvetica, sans-serif">Oslo</font></td>
          <td><font face="Arial, Helvetica, sans-serif">18</font></td>
        </tr>
        <tr bgcolor="#D5E8FD" bordercolor="1"> 
          <td><font face="Arial, Helvetica, sans-serif">Toronto</font></td>
          <td><font face="Arial, Helvetica, sans-serif">16</font></td>
        </tr>
      </table>
      <p>&nbsp;</p>
      <div class="Titles" id="TitleDiv" style="left: 75px; top: 114px"> 
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <p>&nbsp;</p>
        <p>Matching exercise: Drag the temperature on the right to the correct 
          thermometer reading on the left. Drag it to the top right-hand corner 
          of the thermometer. </p>
        <form action="">
          <input type="button" value="Check" onClick="CheckAnswer()" name="button">
        </form>
      </div>
      <div class="Feedback" id="FeedbackDiv"></div>
      <script language="javascript" type="text/javascript">

//<![CDATA[

<!--

for (var i=0; i<F.length; i++){
	document.write('<div id="F' + i + '" class="CardStyle"></div>');
}

for (var i=0; i<D.length; i++){
	document.write('<div id="D' + i + '" class="CardStyle" onmousedown="beginDrag(event, ' + i + ')"></div>');
}

//-->

//]]>
</script>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <p>&nbsp;</p>
      <font face="Arial, Helvetica, sans-serif" size="4" color="#0000FF"><img src="../../images/sound.gif" width="27" height="27" alt="audio button" onMouseDown="MM_controlSound('play','document.CS1021041379930','../audio/Print.mp3')" class="sound"> 
      </font><font face="Arial, Helvetica, sans-serif">Print this page and place 
      it in your folder.</font><br>
      <br>
      <TABLE WIDTH="110">
        <TR> 
          <TD><A HREF="page8.htm"
					 ONMOUSEOUT="MM_swapImgRestore()"
					 ONMOUSEOVER="MM_swapImage('Image13','','../../images/backb.gif',1)"><IMG
					 NAME="Image13" BORDER="0" SRC="../../images/back.gif" WIDTH="43" HEIGHT="15" alt="back"></A></TD>
          <TD><A HREF="../mall6/index.htm" ONMOUSEOUT="MM_swapImgRestore()"
					 ONMOUSEOVER="MM_swapImage('Image14','','../../images/nextb.gif',1)"><IMG
					 NAME="Image14" BORDER="0" SRC="../../images/next.gif" WIDTH="42" HEIGHT="14" alt="next"></A></TD>
        </TR>
      </TABLE>
      <p align="center"> <font size="2" face="Arial, Helvetica, sans-serif"><a href="../mall1/index.htm">Meeting 
        at an agreed time</a> | <a href="../mall2/index.htm">Appointment at the 
        Optician's</a> | <a href="../mall3/index.htm">Arriving on time</a> | <a href="../mall4/index.htm">Arriving 
        late</a> | <a href="index.htm">Travel shop</a> | <a href="../mall6/index.htm">Bar 
        charts of temperature</a> | <a href="../mall7/index.htm">Lottery ticket</a> 
        | <a href="../mall8/index.htm">Sets of numbers</a></font></p>
    </TD>
    <TD width="74">&nbsp;</TD>
  </TR>
</TABLE>
<EMBED NAME='CS1021041379930' SRC='../audio/Print.mp3' LOOP=false 
AUTOSTART=false MASTERSOUND HIDDEN=true WIDTH=0 HEIGHT=0>
</EMBED> <EMBED NAME='CS1021044169210' SRC='audio/page9.mp3' LOOP=false 
AUTOSTART=false MASTERSOUND HIDDEN=true WIDTH=0 HEIGHT=0>
</EMBED> 
</BODY>
</HTML>
