Changes to Moodle Core
All changes to Moodle core code and system files as well as being documented here, have been copied to a folder for ease of use.


Common Bugs / Tasks

- Increase course max summaries per page value: Edit /moodle/course/lib.php – line 9 – change this value

- Fix a bug where CSV files don’t download in IE– show error ‘Internet Explorer cannot download report.php from clg.conel.ac.uk. Internet Explorer was not able to open this Internet fsite. The requested site is either unavailable or cannot be found. Please try again later.’ Possibly fixed in latest Moodle versions.
The fix for this is to add this to the output headers code:

header(“Cache-Control: private”);
header(“Pragma: “);


- If Moodle experiences a lot of Server 500 errors check the ‘Debug messages’ level in admin > server > debugging.
A combination of setting php.ini to record errors to the harddrive instead of via syslog and a having errors display at NORMAL/ALL/DEVELOPER might be the cause.

Inside php.ini look for error_log value – should be syslog if running on IIS

;error_log = "C:\inetpub\logs\php_errors.log"
; Log errors to syslog (Event Log on NT, not valid in Windows 95).
error_log = syslog

/config.php
Last Changed: 12/11/09

- This file should not be overwritten by Moodle when updating, but just in case - as there are very important details saved in here - have added to the backup folder.


/index.php
Last Changed: 28/09/09

- In the $column PHP switch for 'left' - removed inline styles
Line 126
	// nkowald - 2008-08-26 - Removed inline style from page - now set in styles
	//echo '<td style="width: '.$preferred_width_left.'px;" id="left-column">';
	echo '<td id="left-column">';

- Added noscript code in case JavaScript is disabled - so it still displays a home banner image
Line 141
	<?php // nkowald - 2008-08-27 - had to put this bit in here as the editable content editor of the home page does not allow a noscript tag ?>
	<div id="home_image_holder">
		<noscript>
		<img src="<?php echo $CFG->themewww .'/'. current_theme() ?>/pix/home-image1.jpg" id="welcome_image" alt="Welcome to the E-ZONE at the College of North East London" height="269" width="440" />
		</noscript>
	</div>

- In the $column PHP switch for 'right' added Login Box to the RHS menu
Line 274, 278
	case 'right':
		// The right column
		if (blocks_have_content($pageblocks, BLOCK_POS_RIGHT) || $editing || $PAGE->user_allowed_editing()) {
		// nkowald - 2008-08-26 - Removed inline style from page - now set in styles
		//echo '<td style="width: '.$preferred_width_right.'px;" id="right-column">';
		echo '<td id="right-column">';
		// nkowald - 2008-08-25 - added login box to RHS menu
		echo '<div class="headermenu">'. $GLOBALS['THEME']->menu .'</div>';


/file.php
Last Changed: 23/11/09

- In the send_file() function execution, changed the default cache of a file to 1 minute (was previously 24 hours) as teachers often uploaded files with the same name and would see their old files instead of the newly uploaded ones.
Line 186
	// nkowald - 2009-09-23 - Changing default cache lifetime from 24 hours to 1 minute so when user overrides existing file it will show newest
	$lifetime = '0';
	send_file($pathname, $filename, $lifetime, $CFG->filteruploadedfiles, false, $forcedownload);

/mailtest.php
Last Changed: 24/09/09

- Not needed by Moodle but used to show that sending emails via SMTP to addresses on the conel domain is possible.

/web.config (Server Settings)
Last Changed: 07/09/09

<?xml version="1.0" encoding="UTF-8"?>
<configuration>
<location inheritInChildApplications="false"> 
    <system.webServer>
        <defaultDocument>
            <files>
				<clear />
                <add value="index.php" />
                <add value="Default.htm" />
                <add value="index.htm" />
                <add value="index.html" />
            </files>
        </defaultDocument>
        <tracing>
            <traceFailedRequests>
                <add path="*">
                    <traceAreas>
                            <add provider="WWW Server" areas="Authentication,Security,Filter,StaticFile,CGI,Compression,Cache,RequestNotifications,Module,Rewrite" verbosity="Verbose" />
                    </traceAreas>
                    <failureDefinitions timeTaken="00:00:00" statusCodes="405" />
                </add>
            </traceFailedRequests>
        </tracing>
		<security>
			<requestFiltering>
				<requestLimits maxAllowedContentLength="314572800" />
                    <verbs allowUnlisted="true" applyToWebDAV="true">
						<add verb="DELETE" allowed="true" />
						<add verb="POST" allowed="true" />
                        <add verb="GET" allowed="true" />
					</verbs>
			</requestFiltering>
		</security>
        <urlCompression doStaticCompression="true" doDynamicCompression="true" />
		<handlers accessPolicy="Read, Execute, Script">
                <remove name="PHP_via_FastCGI" />
                <add name="PHP_via_FastCGI" path="*.php" verb="*" modules="FastCgiModule" scriptProcessor="C:\Program Files (x86)\PHP\php-cgi.exe" resourceType="Either" requireAccess="Script" />
            </handlers>
    </system.webServer>
</location>
</configuration>

/admin/cron.php
Last Changed: 25/01/10

- Added a cron function that updates all created “meta groups” not touching manually added groups

102
/* nkowald - 2010-01-22 
     *
     * Update members/create groups in meta courses - where group(s) already exist.
     *
     * We could update every meta course creating groups from their child courses but these may not even be used-
     * so a daily cron updating them would be unnecessary and waste resources. 
     * We will leave it up to teachers / e-learning staff to set which groups are updated.
    */
    if ($meta_courses = get_records_sql("SELECT DISTINCT courseid FROM {$CFG->prefix}groups mg, {$CFG->prefix}course_meta mcm 
                                        WHERE mg.courseid = mcm.parent_course")) {
        mtrace("starting meta course group updates/creations");
        foreach ($meta_courses as $meta) {
            if (!$course = get_record('course', 'id', $meta->courseid)) {
               mtrace("error creating course object"); 
            } else {
                if (!groups_create_from_children($course, $roles = 5)) {
                    mtrace("auto group creation for meta courses failed");
                }
            }
        }
        mtrace("meta course group updates/creations completed successfully");
    }
    // nkowald - 2010-01-22

/auth/ldap/auth_ldap_sync_users.php
Last Changed: 01/02/10

- Changed the search value to 2000 to meet Active Directory setting change

Line 44
$ldapauth->sync_users(2000, true);

/auth/ldap/auth.php
Last Changed: 01/02/10

- Ray changed this so that it would loop over user’s last names, so we can search for 1000 users per last name, turns out 1000 was too small so increased to 2000

Line 616-661

for ($letter=1; $letter<=26; $letter++){
	$filter = '(&(sn='.chr($letter+64).'*)('.$this->config->user_attribute.'=*)'.$this->config->objectclass.')';
	echo "the current filter = " . var_dump($filter) . "";

        $contexts = explode(";",$this->config->contexts);

        if (!empty($this->config->create_context)) {
              array_push($contexts, $this->config->create_context);
        }

        $fresult = array();
        foreach ($contexts as $context) {
            $context = trim($context);
            if (empty($context)) {
                continue;
            }
            begin_sql();
            if ($this->config->search_sub) {
                //use ldap_search to find first user from subtree
                $ldap_result = ldap_search($ldapconnection, $context,
                                           $filter,
                                           array($this->config->user_attribute));
            } else {
                //search only in this context
                $ldap_result = ldap_list($ldapconnection, $context,
                                         $filter,
                                         array($this->config->user_attribute));
            }

            if ($entry = ldap_first_entry($ldapconnection, $ldap_result)) {
                do {
                    $value = ldap_get_values_len($ldapconnection, $entry, $this->config->user_attribute);
                    $value = $textlib->convert($value[0], $this->config->ldapencoding, 'utf-8');
                    // usernames are __always__ lowercase.
                    array_push($fresult, moodle_strtolower($value));
                    if (count($fresult) >= $bulk_insert_records) {
                        $this->ldap_bulk_insert($fresult, $temptable);
                        $fresult = array();
                    }
                } while ($entry = ldap_next_entry($ldapconnection, $entry));
            }
            unset($ldap_result); // free mem

            // insert any remaining users and release mem
            if (count($fresult)) {
                $this->ldap_bulk_insert($fresult, $temptable);
                $fresult = array();
            }
            commit_sql();
        }
}

/blocks/moodleblock.class.php
Last Changed: 26/08/09

- Moved the edit controls outside of the title div as have to set fixed height on title div

Line 394
       // nkowald - 2008-08-26 - Moved the edit controls outside of the title div as have to set fixed height on title div
	if ($this->edit_controls !== NULL) {
            	$title .= $this->edit_controls;
        	}



/course/rest.php
Last Changed: 10/09/09

- This file was AJAX called via the HTTP DELETE method which was deleting the entire file; I had to change the HTTP method to send data via POST.
- Edited the Request Method switch code
Line 51
	// nkowald - 2009-09-08 - Ajax DELETE HTTP method deleting this rest.php file (surprise, surprise?).
	$req_method = ($page_action == 'DELETE') ? 'DELETE' : $_SERVER['REQUEST_METHOD'];
	//switch($_SERVER['REQUEST_METHOD']) {

	switch($req_method) {

/course/index.php
Last Changed: 29/09/09

- Modified the appearance of this page so that courses were easier to view and did not take up as much room.

Line 260
	// nkowald - 2009-09-01 - Make category stay on one line (added nowrap class)
    echo '<th class="header nowrap" scope="col">'.$strcategories.'</th>';
	
Line 316
	// nkowald - 2009-09-01 - Make category stay on one line (added nowrap class)
    echo '<tr><td align="left" class="name nowrap">';
	
Line 333-337
	// nkowald - 2009-09-01 - Center align course count (added center class)
	echo '<td class="count center">'.$category->coursecount.'</td>';

	// nkowald - 2009-09-01 - Make little icons stay on one line (added nowrap class)
	echo '<td class="icons nowrap">';    /// Print little icons


/course/lib.php
Last Changed: 05/01/10

- Changed the maximum number of courses that show with summaries
Line 9
define('COURSE_MAX_SUMMARIES_PER_PAGE', 60);    // courses - nkowald - 2009-12-08 - Changed on request of Caroline Rogers


/course/category.php
Last Changed: 06/01/10

- Created a better way to move up and down in moodle

Line 19-22

       /* nkowald - 2010-02-26 - Current move up / move down methodology is flawed because if user hits back button 
	   and the move up param still exists in get parameters, the course will be moved up a second time. */
	$move_this = optional_param('move_this', 0, PARAM_INT);
	$move_to_pos = optional_param('move_to_pos', 0, PARAM_INT);

Line 234-290
       
       // nkowald - 2010-02-26 - This is a better way to move courses up and down
               if ((!empty($move_this) && !empty($move_to_pos)) and confirm_sesskey()) {
                   require_capability('moodle/category:manage', $context);
       		
       			// Check that course is not already in this position
       			$cur_pos = 0;
       			if ($current_position = get_record_select("course","id = ".$move_this."","sortorder")) {
       				foreach($current_position as $pos) {
       					$cur_pos = $pos;
       				}
       			}
       
       			// Only change the order of the course if order is different from what it is currently
       			if ($cur_pos != $move_to_pos && $cur_pos != 0) {
       			
       				// Get all courses assigned to this category and sort them by their current sort order
       				if ($courses_in_category = get_records('course', 'category', $category->id, 'sortorder ASC')) {
       					
       					$num_courses = count($courses_in_category);
       					
       					$i = 1; // counter
       					$curr_sort_order = array();
       					foreach($courses_in_category as $course) {
       						if ($course->visible || has_capability('moodle/category:viewhiddencategories', $context)) {		
       							// If course is not the moving course add to array
       							if ($course->id != $move_this) {
       								$curr_sort_order[$i] = $course->id;
       								$i++;
       							}
       						}
       					} // foreach
       					
       					// Slice array at the move_to point, add course to move to the first part then join to get final order
       					$first_half = array_slice($curr_sort_order,0,($move_to_pos - 1));
       					$second_half = array_slice($curr_sort_order,($move_to_pos - 1));
       					$first_half[] = $move_this;
       					$new_order = array_merge($first_half,$second_half);
       					
       					if (!in_array($move_this,$new_order) || $move_to_pos > $num_courses) {
       						echo "<b>Error:</b> Invalid course or move to position values";
       					} else {
       						// Update the order in the database
       						begin_sql();
       						$i = 1;
       						foreach($new_order as $course_is) {
       							set_field('course', 'sortorder', $i, 'id', $course_is);
       							$i++;
       						}
       						commit_sql();
       					}
       					
       				} // if courses found
       				
       			} // if needs to be moved
       
               } // if $move_this and $move_to_pos
       		// nkowald

- The ability to reorder courses in category view didn’t work, so I updated the code to make it work. Example: https://clg.conel.ac.uk/VLE/course/category.php?id=20&page=0&perpage=50&movedown=398&sesskey=MLQRxO1FLb

Line 173
// ensure the course order has no gaps and isn't at 0
            //fix_course_sortorder($category->id);
            // we are going to need to know the range
			/* nkowald - 2009-11-11 - This is what it used to be using
            $max = get_record_sql('SELECT MAX(sortorder) AS max, 1 
                    FROM ' . $CFG->prefix . 'course WHERE category=' . $category->id);
            $max = $max->max + 100;
			*/
			
			// Moodle course ordering is messed up, let’s fix it.
		
			// We want to first get all courses assigned to this category and sort them by their current sort order
			if ($courses_in_category = get_records('course', 'category', $category->id, 'sortorder ASC')) {
				
				$i = 1; // counter
				foreach ($courses_in_category as $cat) {
					if ($cat->visible || has_capability('moodle/category:viewhiddencategories', $context)) {
						if(set_field('course', 'sortorder', $i, 'id', $cat->id)) {
							$i++;
						}
					}
				} // foreach
				
			} // if courses found

Line 400-401
       // nkowald - 2010-03-01 - Added counter as needed by my updates
       $i = 1;
       
Line 536
       $i++; // nkowald - 2010-03-01 - increase counter

Line 471-505
	/*
                    if ($up) {
                        echo '<a title="'.$strmoveup.'" href="category.php?id='.$category->id.'&amp;page='.$page.
                             '&amp;perpage='.$perpage.'&amp;moveup='.$acourse->id.'&amp;sesskey='.$USER->sesskey.'">'.
                             '<img src="'.$CFG->pixpath.'/t/up.gif" class="iconsmall" alt="'.$strmoveup.'" /></a> ';
                    } else {
                        echo $spacer;
                    }

                    if ($down) {
                        echo '<a title="'.$strmovedown.'" href="category.php?id='.$category->id.'&amp;page='.$page.
                             '&amp;perpage='.$perpage.'&amp;movedown='.$acourse->id.'&amp;sesskey='.$USER->sesskey.'">'.
                             '<img src="'.$CFG->pixpath.'/t/down.gif" class="iconsmall" alt="'.$strmovedown.'" /></a> ';
                    } else {
                        echo $spacer;
                    }
	*/
		// nkowald - 2010-03-01 - Improving course ordering
	       if ($up) {
		$move_to_up = $i - 1;
                        echo '<a title="'.$strmoveup.'" href="category.php?id='.$category->id.'&amp;page='.$page.
                             '&amp;perpage='.$perpage.'&amp;move_this='.$acourse->id.'&amp;move_to_pos='.$move_to_up.'&amp;sesskey='.$USER->sesskey.'">'.
                             '<img src="'.$CFG->pixpath.'/t/up.gif" class="iconsmall" alt="'.$strmoveup.'" /></a> ';
                    } else {
                        echo $spacer;
                    }

                    if ($down) {
						$move_to_down = $i + 1;
                        echo '<a title="'.$strmovedown.'" href="category.php?id='.$category->id.'&amp;page='.$page.
                             '&amp;perpage='.$perpage.'&amp;move_this='.$acourse->id.'&amp;move_to_pos='.$move_to_down.'&amp;sesskey='.$USER->sesskey.'">'.
                             '<img src="'.$CFG->pixpath.'/t/down.gif" class="iconsmall" alt="'.$strmovedown.'" /></a> ';
                    } else {
                        echo $spacer;
                    }

/course/editcategory.php
Last Changed: 29/09/09

- Added a new field to the 'Edit Category' page - this category allows editors to change the main colour of a category. 
- This field can be left blank and it will keep traversing up the category list until it finds a colour to use.

Line 54
	// nkowald - 2009-08-28 - Added a new field to the 'Edit Category' page - this category allows editors to change the main colour of a category
	// this field can be left blank and it will keep traversing up the category list until it finds a colour to use.
	$newcategory->cat_colour = $data->cat_colour;


/course/editcategory_form.php
Last Changed: 06/01/10

- Adding category colour to course edit category form

Line 27
// nkowald - 2009-09-09 - Adding category colour option to form
$mform->addElement('text','cat_colour', get_string('categorycolour'), array('size'=>'7', 'value'=>'#'));


/enrol/database/conel_connection_test.php
Last Changed: 19/11/09

- Used to test connection to EBS – NOT NEEDED BY MOODLE


/enrol/database/work.php
Last Changed: 17/11/09

- Used to test assigning students to their enrolled courses – NOT NEEDED BY MOODLE


/enrol/database/enrol.php
Last Changed: 13/11/09

- Changes were made to this script because when setting up new courses on Moodle there was a bug with courses containing hyphens

Line 89
// nkowald - 2009-11-06 - Added the str_replace to change all hyphens to underscores
$courselist[] = str_replace('-','_',$fields_obj->enrolremotecoursefield);

Line 233
// nkowald - 2009-11-09 - This fixes the hyphen problem
$extcourse = str_replace('-','_',$extcourse);

Lines 332 – 362 
SHOULD STAY UNCOMMENTED
		
		/* nkowald - 2009-11-13 - Removed this unenrol manually as they do sometimes manually add students to courses who are not in EBS
		// prune enrolments to MANUALLY ADDED users that are no longer assigned to course in EBS
		// nkowald - added this block which unenrols manually added students from courses
		if (!$CFG->enrol_db_disableunenrol) {
            $to_prune_further = get_records_sql("
             SELECT ra.*
             FROM {$CFG->prefix}role_assignments ra
              JOIN {$CFG->prefix}user u ON ra.userid = u.id
             WHERE ra.enrol = 'manual'
              AND ra.contextid = {$context->id}
              AND ra.roleid = ". $role->id . ($extenrolments
                ? " AND u.{$CFG->enrol_localuserfield} NOT IN (".join(", ", array_map(array(&$db, 'quote'), $extenrolments)).")"
                : ''));

            if ($to_prune_further) {
                foreach ($to_prune_further as $role_assignment) {
				
					// Only unenrol manually added students
					if ($role_assignment->roleid == '5') {
						if (role_unassign($role->id, $role_assignment->userid, 0, $role_assignment->contextid)){
							error_log( "Unassigned {$role->shortname} assignment #{$role_assignment->id} for course {$course->id} (" . format_string($course->shortname) . "); user {$role_assignment->userid}");
						} else {
							error_log( "Failed to unassign {$role->shortname} assignment #{$role_assignment->id} for course {$course->id} (" . format_string($course->shortname) . "); user {$role_assignment->userid}");
						}
					}
					
                }
            }
        }
		*/


/group/lib.php
Last Changed: 27/01/10

- Added a new function: groups_create_from_children() and modified groups_delete_gorup_membes()

Line 53-127
//nkowald - 2010-01-20
/**
 * Create groups in a meta course from its child courses, filled with users of passed role id(s)
 * Created groups get their name from the child course (fullname)
 * This can be run from the cron to daily update members/create groups for all meta courses
 *
 * @param object    $course    course object
 * @param int/array $roles     role id(s) to set which users are added to group - defaults to students
 * @return boolean
 * @since Moodle 1.9.5 (Build 20090819)
 */
function groups_create_from_children($course, $roles = 5) {

    // only run when course is a meta course
    if (record_exists("course_meta", "parent_course", $course->id)) {

        // get all child courses for current meta
        $child_courses = get_courses_in_metacourse($course->id);

        // delete all members of current "autocreate" groups, leave manual groups alone
        // "autocreate" = if group exists with same name as child course, remove members from these groups only
        $del_group_ids = array();
        foreach ($child_courses as $child) {
            $mdl_group = get_record_select('groups', "courseid = ".$course->id." AND name = '".$child->fullname."' " );
            if (is_object($mdl_group)) {
                $del_group_ids[] = $mdl_group->id;
            }
        }
        // if autocreate groups found
        if (count($del_group_ids) > 0) {
            $del_group_ids_csv = implode(',',$del_group_ids);
            // Group ids to exclude from member deletion
            groups_delete_group_members($course->id, 0, false, $del_group_ids_csv);
        }

        foreach ($child_courses as $child) {
            // Check if groups exist with these names in this course?
            $mdl_group = get_record_select('groups', "courseid = ".$course->id." AND name = '".$child->fullname."' " );

            // If course does not exist, create it
            if (!is_object($mdl_group)) {
                $mdl_group = new StdClass;
                $mdl_group->name = $child->fullname;
                $mdl_group->description = '';
                $mdl_group->courseid = $course->id;

                $group_id = groups_create_group($mdl_group);

                if (!$mdl_group = get_record('groups', 'id', $group_id)){
                    $error_creating_group = 'Creating group '.$child->fullname.' failed';
                    error_log($error_creating_group);
                    debugging($error_creating_group);
                    continue;
                }
            }

            $context = get_context_instance(CONTEXT_COURSE, $child->id);
            // If user of given role type exist in child course add them to new group - sort by firstname
            if ($users_of_role = get_role_users($roles, $context, false, '', 'u.firstname ASC')) {
                foreach ($users_of_role as $user) {
                    groups_add_member($mdl_group->id, $user->id);
                }
            }

        } //foreach child course
        return true;

    } else {
        $not_a_meta_course = 'Course given is not a meta course';
        error_log($not_a_meta_course);
        debugging($not_a_meta_course);
        return false;
    }
}
//nkowald - 2010-01-20


Line 339-360
/**
 * Remove all users (or one user) from all groups in course
 * @param int $courseid
 * @param int $userid 0 means all users
 * @param bool $showfeedback
 * @param string $group_csv_ids		nkowald - 2010-01-27 - added parameter to give option to only delete members from passed groups
 * @return bool success
 */
function groups_delete_group_members($courseid, $userid=0, $showfeedback=false, $group_csv_ids = "") {
    global $CFG;

    if (is_bool($userid)) {
        debugging('Incorrect userid function parameter');
        return false;
    }

    if ($userid) {
        $usersql = "AND userid = $userid";
    } else {
        $usersql = "";
    }

    if ($group_csv_ids != "") {
        $groupssql = $group_csv_ids;
    } else {
        $groupssql = "SELECT id FROM {$CFG->prefix}groups g WHERE g.courseid = $courseid";
    }


/group/index.php
Last Changed: 22/01/10

- Added a new switch action for handling the autocreation of groups from children

Line 128-131
	// nkowald - 2010-01-20 - This code will trigger function to set up groups from child courses
	case 'setupgroups':
		groups_create_from_children($course, 5);
		break;


- Add a new button only if course is a meta course

Line 230-234
// nkowald - 2010-01-20 - Check if current course is a meta, if so get children courses
if (record_exists("course_meta", "parent_course", $course->id)) {
	echo '<p><input type="submit" name="act_setupgroups" id="setupgroups" value="Create groups from child courses" /></p>';
}
// nkowald - 2010-01-20


/group/members.php
Last Changed: 20/01/10

- Fixed a bug where GET parameters were not being added to the url after refresh

Line 210-220
	<?php
		// nkowald - 2010-01-20 - bug where it's not adding get variables to the post url
		$action_url = ($_SERVER['REQUEST_URI'] != '') ? $_SERVER['REQUEST_URI'] : 'members.php';
		echo '<form id="assignform" method="post" action="'.$action_url.'">';
	?>
    <div>
    <input type="hidden" name="sesskey" value="<?php p(sesskey()); ?>" />
	<?php
		// nkowald - 2010-01-20 - was changing the group id after the first member delete so get group id from get variable now
		$group_id_is = (isset($_GET['group']) && $_GET['group'] != '') ? $_GET['group'] : $groupid;
	?>


/lang/en_utf8/block_send_sms.php
Last Changed: 05/08/09

- Sets up Block name
<?php
	$string['blockname'] = 'Send SMS';
	$string['configtitle'] = 'Send SMS';
	$string['defaulttitle'] = 'Send SMS';     
?>


/lib/weblib.php
Last Changed: 18/01/10

- Added a new print stylesheet to fix up “E-ILP Printing Bug”

Line 2489
// nkowald - 2009-12-23 - Add the new print stylesheet
// TODO - Get the path from a constant
$stylesheetshtml .= '<link rel="stylesheet" type="text/css" media="print" href="https://clg.conel.ac.uk/VLE/theme/conel/print.css" />'."\n";


/lib/accesslib.php
Last Changed: 15/12/09

- Fixed this bug where teachers were given the required roles but this script wasn’t letting them see what they should

Line 826-851
/* nkowald - 2009-12-15 - This hack is needed for feedback roles to behave themselves */
	if ($capability == 'mod/feedback:viewreports') {
		// If Teacher role (/1:3 <-- 3 = teacher) has Feedback > View Reports role enabled, then they need to view reports
		if (isset($USER->access['rdef']['/1:3']['mod/feedback:viewreports']) && $USER->access['rdef']['/1:3']['mod/feedback:viewreports'] == '1') {
			$can = 1;
		} 
	}
	if ($capability == 'mod/feedback:edititems') {
		// If Teacher role has Feedback > Edit items role enabled, then they need to be able to edit items - currently disabled for teachers
		if (isset($USER->access['rdef']['/1:3']['mod/feedback:edititems']) && $USER->access['rdef']['/1:3']['mod/feedback:edititems'] == '1') {
			$can = 1;
		}
	}
	if ($capability == 'mod/feedback:view') {
		// If Teacher role has Feedback > View role enabled, then they need to view reports
		if (isset($USER->access['rdef']['/1:3']['mod/feedback:view']) && $USER->access['rdef']['/1:3']['mod/feedback:view'] == '1') {
			$can = 1;
		}
	}
	if ($capability == 'moodle/course:viewhiddenactivities') {
		// If Teacher role AND this particular feedback item: let them view hidden activities
		if (isset($USER->access['rdef']['/1:3']['moodle/course:viewhiddenactivities']) && $context->id == '92175') {
			$can = 1;
		}
	}

/lib/moodlelib.php
Last Changed: 18/01/10

- Fixed this bug where invalid characters in a zip file would break an upload

Line 7622
// 2009-09-11 - nkowald - Array of characters to remove entirely - instead of replace with underscore
        $remove_chars = array('\'','#','&');
        $p_header['filename'] = str_replace($remove_chars,'',$p_header['filename']);
        $p_header['filename'] = ereg_replace('[:*"?<>|]', '_', $p_header['filename']); //replace illegal chars
        $p_header['filename'] = ereg_replace('^([a-zA-Z])_', '\1:', $p_header['filename']); //repair drive letter


/lib/ajax/block_classes.js
Last Changed: 14/09/09

- This SHOULD be fixed in new version of Moodle as I helped with the fix, but if now this changed fixes ajax deletion of resources from in courses

Line 261
// nkowald - 2009-09-08 - Changed From DELETE HTTP method to POST, added action=DELETE as modern browsers - surprise, surprise - deletes the rest.php file.
    main.connect('POST', 'class=block&action=DELETE&instanceId='+this.instanceId);
    //main.connect('DELETE', 'class=block&instanceId='+this.instanceId);


/lib/ajax/section_classes.js
Last Changed: 08/09/09

- This SHOULD be fixed in new version of Moodle as I helped with the fix, but if now this changed fixes ajax deletion of resources from in courses

Line 261
// nkowald - 2009-09-08 - Changed From DELETE HTTP method to POST, added action=DELETE as modern browsers - surprise, surprise - deletes the rest.php file.
    main.connect('POST', 'class=block&action=DELETE&instanceId='+this.instanceId);
    //main.connect('DELETE', 'class=block&instanceId='+this.instanceId);


/lib/editor/htmlarea/htmlarea.php
Last Changed: 26/01/09

- There was an error in IE only with this JavaScript code where the extended functionality html editor window would not load text – when you are editing say a label

Line 608
// nkowald - 2010-01-05 - Changed this to "Path" as sometimes on live only this object would be NULL
div.innerHTML = "Path" + ": ";


/lib/editor/htmlarea/popups/fullscreen.php
Last Changed: 05/01/10

- There was an error in IE only with this JavaScript code where the extended functionality html editor window would not load text – when you are editing say a label

Line 24
// nkowald - 2010-01-05 - Added window so opener property could be accessed by IE
var scripts = window.opener.document.getElementsByTagName("script");

Line 122
// nkowald - 2010-01-05 - Added window so opener property could be accessed by IE
parent_object      = window.opener.HTMLArea._object;


/mod/assignment/lib.php
Last Changed: 28/01/10

- Assigment submissions showed e-learning technologists which would confuse teachers, this update excludes ELT them from the list

Line 1072-1090
		// nkowald - 2010-01-07 - Assigment submissions showed e-learning technologists which would confuse teachers, this update excludes ELT them from the list
		$elearning_techs = '';
		$et_ids = get_records_sql("SELECT userid FROM mdl_role_assignments WHERE roleid = 2");
		if ($et_ids > 0) {
			$et_ids_arr = array();
			foreach($et_ids as $key => $value) {
				$et_ids_arr[] = $key;
			}
			// csv list of e-learning technologists to exclude from assignments list
			$elearning_techs = implode(",",$et_ids_arr);
		}

        /// Get all ppl that are allowed to submit assignments
		// nkowald - 2010-01-07 - Added the $elearning_techs list to the exceptions parameter to exclude them from showing
		//if ($users = get_users_by_capability($context, 'mod/assignment:submit', 'u.id', '', '', '', $currentgroup, '', false)) {
        if ($users = get_users_by_capability($context, 'mod/assignment:submit', 'u.id', '', '', '', $currentgroup, $elearning_techs, false)) {
            $users = array_keys($users);
        }
		// nkowald - 2010-01-07


/mod/assignment/type/upload/assignment.class.php
Last Changed: 28/01/10

- Commented out the two below conditions as teachers were leaving out grades and comments and their uploaded documents weren't showing to students, now teacher feedback will NOT show ONLY if it has been set to hidden.

Line 96-100
		// nkowald - 2009-11-24 - Commented out the two below conditions as teachers were leaving out grades and comments and their uploaded
		// documents weren't showing to students, now teacher feedback will NOT show ONLY if it has been set to hidden.
		if ($grade->hidden) {
			return;
		}

- Changed default option to ‘no’

Line 1062

$mform->setDefault('var4', 0); // nkowald - 2009-11-24 - Changed this to default to 'No'


Learner Survey Analysis Work 
TODO: Modify code so that this can still be used as per normal for all new feeback analysis, test.

/mod/feedback/analysis_course.php
Last Changed: 16/12/09

- So, so much of this has changed… where to start? – here’s all of the file:

<?php // $Id: analysis_course.php,v 1.5.2.3 2008/07/18 14:54:43 agrabs Exp $

	/***
	*  Shows an analysed view of a feedback on the mainsite
	*
	*  @version $Id: analysis_course.php,v 1.5.2.3 2008/07/18 14:54:43 agrabs Exp $
	*  @author Andreas Grabs
	*  @license http://www.gnu.org/copyleft/gpl.html GNU Public License
	*  @package feedback
	*  @modified	nkowald		2009-11-20
	*
	***/

    require_once("../../config.php");
    require_once("lib.php");
    
    // $SESSION->feedback->current_tab = 'analysis';
    $current_tab = 'analysis';
 
    $id = required_param('id', PARAM_INT);  //the POST dominated the GET
    $coursefilter = optional_param('coursefilter', 0, PARAM_INT);
    $courseitemfilter = optional_param('courseitemfilter', 0, PARAM_INT);
    $courseitemfiltertyp = optional_param('courseitemfiltertyp', '0', PARAM_ALPHANUM);
    $searchcourse = optional_param('searchcourse', '', PARAM_RAW);
    $courseid = optional_param('courseid', false, PARAM_INT);
	$search_directorates = optional_param('directorates', 0, PARAM_INT);
	$search_sectors = optional_param('sectors', 0, PARAM_INT);
	$search_levels = optional_param('levels', '', PARAM_RAW);
	$search_curriculum_areas = optional_param('curriculum_areas', '', PARAM_RAW);
	$filter_choice = optional_param('filter_choice', 'filter_course', PARAM_RAW);
	$filter_gender = optional_param('filter_gender', '', PARAM_INT);
	$filter_age = optional_param('filter_age', '', PARAM_INT);
	$filter_ethnicity = optional_param('filter_ethnicity','', PARAM_RAW);
	$filter_attendance = optional_param('filter_attendance','', PARAM_RAW);
	$filter_learning_difficulty = optional_param('filter_learning_difficulty','', PARAM_RAW);
	$filter_learning_disability = optional_param('filter_learning_disability','', PARAM_RAW);

    if (($searchcourse OR $courseitemfilter OR $coursefilter) AND !confirm_sesskey()) {
        error('no sesskey defined');
    }
    
    if ($id) {
        if (! $cm = get_coursemodule_from_id('feedback', $id)) {
            error("Course Module ID was incorrect");
        }
     
        if (! $course = get_record("course", "id", $cm->course)) {
            error("Course is misconfigured");
        }
     
        if (! $feedback = get_record("feedback", "id", $cm->instance)) {
            error("Course module is incorrect");
        }
    }
    $capabilities = feedback_load_capabilities($cm->id);

    require_login($course->id, true, $cm);
    
    if(!((intval($feedback->publish_stats) == 1) || $capabilities->viewreports)) {
        error(get_string('error'));
    }

    /// Print the page header
    $strfeedbacks = get_string("modulenameplural", "feedback");
    $strfeedback  = get_string("modulename", "feedback");
    $buttontext   = update_module_button($cm->id, $course->id, $strfeedback);
    
    $navlinks = array();
    $navlinks[] = array('name' => $strfeedbacks, 'link' => "index.php?id=$course->id", 'type' => 'activity');
    $navlinks[] = array('name' => format_string($feedback->name), 'link' => "", 'type' => 'activityinstance');
    
    $navigation = build_navigation($navlinks);
    
    print_header_simple(format_string($feedback->name), "", $navigation, "", "", true, $buttontext, navmenu($course, $cm));

    /// print the tabs
    include('tabs.php');

	// Don't treat these course ids as 'valid'
	$invalid_cids = array('',0,1);

    //print the analysed items
    print_box_start('generalbox boxaligncenter boxwidthwide');
	
	if (isset($_GET['noresponses']) && $_GET['noresponses'] == 1) {

		/* nkowald - 2009-12-09 - Get all courses that have the feedback block on but no responses. */

		// Get list of all course ids that feature the feedback block.
		$sql = "SELECT DISTINCT pageid FROM ".$CFG->prefix."block_instance WHERE blockid = 37 AND visible = 1 ORDER BY pageid ASC";	
		$feedbacked_courses = array();
		if ($feedback_cids = get_records_sql($sql)) {
			foreach($feedback_cids as $cid) {
				$feedbacked_courses[] = $cid->pageid;
			}
		}

		// Get list of all course ids from submitted feedback values
		$sql = "SELECT DISTINCT course_id FROM ".$CFG->prefix."feedback_value WHERE course_id <> 0 ORDER BY course_id ASC";
		$submitted_courses = array();
		if ($submitted_cids = get_records_sql($sql)) {
			foreach($submitted_cids as $cid) {
				$submitted_courses[] = $cid->course_id;
			}
		}

		// Now get all courses that we collected that have no submitted values against them.
		$unanswered = array_diff($feedbacked_courses,$submitted_courses);

		// Get course ids and names to display to user
		$not_submitted = implode(',',$unanswered);
		$sql = "SELECT id, fullname, shortname, idnumber FROM mdl_course WHERE id IN ($not_submitted)";
		$no_results = array();
		if ($unanswered_results = get_records_sql($sql)) {
			// Build HTML from results
			foreach($unanswered_results as $result) {
				if ($result->id != 1) {
					$id_is = ($result->idnumber != '') ? $result->idnumber : $result->shortname;
					$no_results[] = '<a href="/VLE/course/view.php?id='.$result->id.'">'.$id_is.' - '.$result->fullname.'</a>';
				}
			}
		}

		// get the items of the feedback
		$items = get_records_select('feedback_item', 'feedback = '. $feedback->id . ' AND hasvalue = 1', 'position');

		if (is_array($items)) {
			echo '<a href="analysis_course.php?id=' . $id . '&amp;courseid=0">'.get_string('show_all', 'feedback').' courses</a>';
		}

		if (count($no_results) > 0) {
			echo '<br /><br /><hr style="height:1px;" />';
			echo "<b>Empty Feedback: ".count($no_results)."</b><br />";
			echo '<br /><hr style="height:1px;" />';
			echo '<p><b>The following courses contain the feedback link but no responses submitted against them</b></p>';
			echo '<ol class="non_results">';
			foreach($no_results as $link) {
				echo "<li>$link</li>";	
			}
			echo '</ul>';
		}


	} else {

		// Include JavaScript functions needed to reset values and hide options when selecting filters
		// If you're adding filter options - you will need to edit this file
		echo '<script type="text/javascript" src="feedback_functions.js"></script>';

		//get the groupid
		//lstgroupid is the choosen id
		$mygroupid = false;

		$completedscount = feedback_get_completeds_group_count($feedback, $mygroupid, $coursefilter);

		$completedscount_from_values = 0;
		if ($values = get_records('feedback_value', 'item', 194)){
			$completedscount_from_values = sizeof($values);
		}
		
		//show the count
		echo '<b>'.get_string('completed_feedbacks', 'feedback').': '.$completedscount. '</b><br />';

		// get the items of the feedback
		$items = get_records_select('feedback_item', 'feedback = '. $feedback->id . ' AND hasvalue = 1', 'position');

		//show the count
		if(is_array($items)){
			echo '<b>'.get_string('questions', 'feedback').': ' .sizeof($items). ' </b><hr />';
			echo '<a href="analysis_course.php?id=' . $id . '&amp;courseid=0">'.get_string('show_all', 'feedback').' courses</a>';
		} else {
			$items=array();
		}


		echo '<br /><a href="analysis_course.php?id=' . $id . '&amp;courseid='.$courseid.'&amp;noresponses=1">Show courses with no feedback responses</a><br /><br />';

		/*
		// nkowald - uncomment this to view POST variables and debug
		echo '<pre>';
		var_dump($_POST);
		echo '</pre>';
		*/
		
		echo '<form name="report" method="post">';
		echo '<table width="600" cellpadding="10" id="filter_table">';

		if ($courseitemfilter > 0) {
			$avgvalue = 'avg(value)';
			if ($CFG->dbtype == 'postgres7') {
				 $avgvalue = 'avg(cast (value as integer))';
			}
			
			$query = 'SELECT fv.course_id, c.shortname, '.$avgvalue.' as avgvalue '.
						  'FROM '.$CFG->prefix.'feedback_value fv, '.$CFG->prefix.'course c, '.
						  $CFG->prefix.'feedback_item fi '.
						  'WHERE fv.course_id = c.id 
						  AND fi.id = fv.item 
						  AND fi.typ = \''.$courseitemfiltertyp.'\' and fv.item = \''.
						  $courseitemfilter.'\' '.
						  'GROUP BY course_id, shortname ORDER BY avgvalue DESC';

			if ($courses = get_records_sql ($query)) {
				 $item = get_record('feedback_item', 'id', $courseitemfilter);
				 echo '<tr><th colspan="2">'.$item->name.'</th></tr>';
				 echo '<tr><td><table align="left">';
				 echo '<tr><th>Course</th><th>Average</th></tr>';
				 $sep_dec = get_string('separator_decimal', 'feedback');
				 $sep_thous = get_string('separator_thousand', 'feedback');

				 foreach ($courses as $c) {
					  echo '<tr><td>'.$c->shortname.'</td><td align="right">'.number_format(($c->avgvalue), 2, $sep_dec, $sep_thous).'</td></tr>';
				 }
				 echo '</table></td></tr>';
			} else {
				 echo '<tr><td>'.get_string('noresults').'</td></tr>';
			}

		} else {

			echo '<tr><td class="centered">';
			echo get_string('search_course', 'feedback') . ': ';
			echo '<input type="text" name="searchcourse" value="'.s($searchcourse).'"/> <input type="submit" value="'.get_string('search').'"/>';
			echo '<input type="hidden" name="sesskey" value="' . $USER->sesskey . '" />';
			echo '<input type="hidden" name="id" value="'.$id.'" />';
			echo '<input type="hidden" name="courseitemfilter" value="'.$courseitemfilter.'" />';
			echo '<input type="hidden" name="courseitemfiltertyp" value="'.$courseitemfiltertyp.'" />';
			echo '<input type="hidden" name="courseid" value="'.$courseid.'" />';
			echo '</td></tr>';

			// Here add radio buttons for filter choices
			echo "<tr><td class=\"centered\">\n";
			echo '<br />Filter Results: ';
			$filter_course_checked = ((isset($filter_choice) && ($filter_choice == 'filter_course')) || $filter_choice == '') ? ' checked="checked"' : '';
			$filter_directorate_checked = (isset($filter_choice) && ($filter_choice == 'filter_directorate')) ? ' checked="checked"' : '';
			$filter_sector_checked = (isset($filter_choice) && ($filter_choice == 'filter_sector')) ? ' checked="checked"' : '';
			$filter_level_checked = (isset($filter_choice) && ($filter_choice == 'filter_level')) ? ' checked="checked"' : '';
			$filter_curric_checked = (isset($filter_choice) && ($filter_choice == 'filter_curriculum_area')) ? ' checked="checked"' : '';
			
			echo '<input type="radio" name="filter_choice" id="filter_course" value="filter_course" '.$filter_course_checked.' onClick="showSelection(this)" /><label for="filter_course">Course</label>&nbsp;';
			echo '<input type="radio" name="filter_choice" id="filter_directorate" value="filter_directorate" '.$filter_directorate_checked.' onClick="showSelection(this)" /><label for="filter_directorate">Directorate</label>&nbsp;';
			echo '<input type="radio" name="filter_choice" id="filter_sector" value="filter_sector" '.$filter_sector_checked.' onClick="showSelection(this)" /><label for="filter_sector">Sector</label>&nbsp;';
			echo '<input type="radio" name="filter_choice" id="filter_level" value="filter_level" '.$filter_level_checked.' onClick="showSelection(this)" /><label for="filter_level">Level</label>&nbsp;';
			echo '<input type="radio" name="filter_choice" id="filter_curriculum_area" value="filter_curriculum_area" '.$filter_curric_checked.' onClick="showSelection(this)" /><label for="filter_curriculum_area">Curriculum Area</label>';
			echo '<br /><br class="clear_both" />';
			
			$show_directorates = ($filter_choice == "filter_directorate") ? 'style="display:block;" ' : '';
			echo '<div id="directorates_holder"'.$show_directorates.'>';
			
			// nkowald - 2009-09-29 - Get Directorate values
			$sql = "SELECT id, name FROM ".$CFG->prefix."course_categories ".
										  "WHERE parent = 0 ".
										  "AND name LIKE '%Directorate%' ".
										  "ORDER BY sortorder ASC";
					
			
			
			if ($directorates = get_records_sql_menu($sql)) {
				echo'<div class="filter_directorates">Directorates: ';
				choose_from_menu($directorates, 'directorates', $search_directorates, 'choose', 'this.form.submit()');
				echo '</div>';
			}

			// Check if any filters have been added
			if ($search_directorates > 0 && $filter_choice == 'filter_directorate') {

				$get_cats = 'SELECT DISTINCT c.id, c.shortname, c.category FROM '.$CFG->prefix.'course c, '.
												  $CFG->prefix.'feedback_value fv, '.$CFG->prefix.'feedback_item fi '.
												  'WHERE c.id = fv.course_id 
												  AND fi.id = fv.item 
												  AND fi.feedback = '.$feedback->id.' '.
												  'AND 
												  (c.shortname '.sql_ilike().' \'%'.$searchcourse.'%\'
												  OR c.fullname '.sql_ilike().' \'%'.$searchcourse.'%\')';
			
				// If we found categories
				$direct_courses = array();
				if ($courses_cat = get_records_sql($get_cats)) {
					foreach ($courses_cat as $cat) {

						$query = "SELECT path FROM ".$CFG->prefix."course_categories WHERE id = '".$cat->category."'";
						$get_path = get_record_sql($query);
						// explode path values into an array for accurate comparison
						$path_ids = explode('/',$get_path->path);

						if (in_array($search_directorates,$path_ids)) {
							$direct_courses[] = $cat->id;
						}
						
					}
				}
				
				// convert filtered courses array to csv string
				$directorates_found = implode(",", $direct_courses);
				
				// If courses found under the directorates category: display them.
				$sql = 'SELECT DISTINCT c.id, c.shortname FROM '.$CFG->prefix.'course c, '.
							  $CFG->prefix.'feedback_value fv, '.$CFG->prefix.'feedback_item fi '.
							  'WHERE c.id = fv.course_id 
							  AND fi.id = fv.item 
							  AND fi.feedback = '.$feedback->id.'
							  AND c.id IN ('.$directorates_found.') 
							  AND (c.shortname '.sql_ilike().' \'%'.$searchcourse.'%\'
							  OR c.fullname '.sql_ilike().' \'%'.$searchcourse.'%\')';
					
				if ($courses = get_records_sql_menu($sql)) {
					echo '<div class="filter_directorates_course">Course: ';
					$in_charge = ($coursefilter == "0" && (!in_array($courseid, $invalid_cids)) && $filter_choice == 'filter_course') ? $courseid : $coursefilter;
					choose_from_menu($courses, 'coursefilter', $in_charge, 'choose', 'this.form.submit()');
					echo '</div>';
				}
			}
			
			echo '<br class="clear_both" /></div>';

			$show_sector = ($filter_choice == "filter_sector") ? 'style="display:block;" ' : '';
			echo '<div id="sector_holder"'.$show_sector.'>';
			
			// nkowald - 2009-11-19 - Get Sectors
			$sql = "SELECT * FROM mdl_course_categories WHERE name LIKE ('% Sector') ORDER BY sortorder";
			
			if ($sectors = get_records_sql_menu($sql)) {
				echo'<div class="filter_sectors">Sector: ';
				choose_from_menu($sectors, 'sectors', $search_sectors, 'choose', 'this.form.submit()');
				echo '</div>';
			}
			
			// Need to check if any sector filters have been added
			if ($search_sectors > 0 && $filter_choice == 'filter_sector') {

				$get_cats = 'SELECT DISTINCT c.id, c.shortname, c.category FROM '.$CFG->prefix.'course c, '.
												  $CFG->prefix.'feedback_value fv, '.$CFG->prefix.'feedback_item fi '.
												  'WHERE c.id = fv.course_id 
												  AND fi.id = fv.item 
												  AND fi.feedback = '.$feedback->id.' '.
												  'AND (c.shortname '.sql_ilike().' \'%'.$searchcourse.'%\'
												  OR c.fullname '.sql_ilike().' \'%'.$searchcourse.'%\')';
			
				// If we found categories
				$sect_courses = array();
				if ($courses_cat = get_records_sql($get_cats)) {
					foreach ($courses_cat as $cat) {

						$query = "SELECT path FROM ".$CFG->prefix."course_categories WHERE id = '".$cat->category."'";
						$get_path = get_record_sql($query);
						// explode path values into an array for accurate comparison
						$path_ids = explode('/',$get_path->path);

						if (in_array($search_sectors,$path_ids)) {
							$sect_courses[] = $cat->id;
						}
					}
				}
				
				// convert filtered courses array to csv string
				$sectors_found = implode(",", $sect_courses);
				
				// If we've found courses under the sectors category, lets display them.
				$sql = 'SELECT DISTINCT c.id, c.shortname FROM '.$CFG->prefix.'course c, '.
								  $CFG->prefix.'feedback_value fv, '.$CFG->prefix.'feedback_item fi '.
								  'WHERE c.id = fv.course_id 
								  AND fi.id = fv.item 
								  AND fv.item = fi.id '.
								  'AND fi.feedback = '.$feedback->id.'
								  AND c.id IN ('.$sectors_found.') 
								  AND (c.shortname '.sql_ilike().' \'%'.$searchcourse.'%\'
								  OR c.fullname '.sql_ilike().' \'%'.$searchcourse.'%\')';
				
				if ($courses = get_records_sql_menu($sql)) {
					echo '<div class="filter_sectors_course">Course: ';
					$in_charge = ($coursefilter == "0" && (!in_array($courseid, $invalid_cids)) && $filter_choice == 'filter_course') ? $courseid : $coursefilter;
					choose_from_menu($courses, 'coursefilter', $in_charge, 'choose', 'this.form.submit()');
					echo '</div>';
				}
			}
			
			echo '<br class="clear_both" /></div>';
			
			$show_level = ($filter_choice == "filter_level") ? 'style="display:block;" ' : '';
			echo '<div id="levels_holder"'.$show_level.'>';
			
			// nkowald - 2009-11-19 - Build levels drop-down
			
			$levels_arr = array(
				'1' => 'Level 1',
				'2' => 'Level 2',
				'3' => 'Level 3',
				'4' => 'Level 4',
				'G' => 'Entry 1',
				'F' => 'Entry 2',
				'E' => 'Entry 3',
				'H' => 'PreEntry'
			);
			
			echo'<div class="filter_levels">Level: ';
			choose_from_menu($levels_arr, 'levels', $search_levels, 'choose', 'this.form.submit()');
			echo '</div>';
				if ($search_levels != '0' && $filter_choice == 'filter_level') {
			
				$sql = 'SELECT DISTINCT c.id, c.shortname FROM '.$CFG->prefix.'course c, '.
												  $CFG->prefix.'feedback_value fv, '.$CFG->prefix.'feedback_item fi '.
												  'WHERE c.id = fv.course_id 
												  AND fi.id = fv.item 
												  AND fi.feedback = '.$feedback->id.' '.
												  'AND (c.shortname '.sql_ilike().' \'%'.$searchcourse.'%\'
												  OR c.fullname '.sql_ilike().' \'%'.$searchcourse.'%\')
												  AND (c.shortname LIKE \'__'.$search_levels.'%\')';
				
				// If we found categories
				if ($courses = get_records_sql_menu($sql)) {
					$level_courses = array();
					echo '<div class="filter_levels_course">Course: ';
					$in_charge = ($coursefilter == "0" && (!in_array($courseid, $invalid_cids)) && $filter_choice == 'filter_course') ? $courseid : $coursefilter;
					choose_from_menu($courses, 'coursefilter', $in_charge, 'choose', 'this.form.submit()');
					echo '</div>';
					
					// Add course ids to array to show results
					foreach ($courses as $cid => $c_value) {
						$level_courses[] = $cid;
					}
				}
				
			}	
			
			echo '<br class="clear_both" /></div>';


			// Curriculum area filter	
			$show_curric = ($filter_choice == "filter_curriculum_area") ? 'style="display:block;" ' : '';
			echo '<div id="curriculum_area_holder"'.$show_curric.'>';
			
			// get distinct categories of all feedback items
			$dist_cats = array();
			$get_dist_cats = 'SELECT DISTINCT c.category FROM '.$CFG->prefix.'course c, '.
									$CFG->prefix.'feedback_value fv, '.$CFG->prefix.'feedback_item fi 
									WHERE c.id = fv.course_id 
									AND fi.id = fv.item 
									AND fi.feedback = '.$feedback->id.'
									AND (c.shortname '.sql_ilike().' \'%'.$searchcourse.'%\'
									OR c.fullname '.sql_ilike().' \'%'.$searchcourse.'%\')';

			if ($distinct_cats = get_records_sql($get_dist_cats)) {
				foreach($distinct_cats as $dcat) {
					$dist_cats[] = $dcat->category;
				}	
			}


			// We should now have a list of distinct categories
			if (count($dist_cats > 0)) {
				$imp_dist_cats = implode(',',$dist_cats);	
				// nkowald - 2009-09-29 - Get Curriculum area values
				$query = "SELECT id, name FROM ".$CFG->prefix."course_categories
											WHERE id IN (".$imp_dist_cats.") 
											AND depth = 3
											ORDER BY name ASC";

				if ($curriculum_areas = get_records_sql_menu($query)) {
					echo'<div class="filter_curriculum_areas">Curriculum Area: ';
					choose_from_menu($curriculum_areas, 'curriculum_areas', $search_curriculum_areas, 'choose', 'this.form.submit()');
					echo '</div>';
				}

			}		

			// Need to check if any filters have been added
			if ($search_curriculum_areas > 0 && $filter_choice == 'filter_curriculum_area') {

				$get_cats = 'SELECT DISTINCT c.id, c.shortname, c.category FROM '.$CFG->prefix.'course c, '.
								$CFG->prefix.'feedback_value fv, '.$CFG->prefix.'feedback_item fi 
								WHERE c.id = fv.course_id AND fi.id = fv.item AND fi.feedback = '.$feedback->id.'
								AND (c.shortname '.sql_ilike().' \'%'.$searchcourse.'%\'
								OR c.fullname '.sql_ilike().' \'%'.$searchcourse.'%\')';
			
				// If we found categories
				$curric_courses = array();
				if ($courses_cat = get_records_sql($get_cats)) {
					foreach ($courses_cat as $cat) {

						$query = "SELECT path FROM ".$CFG->prefix."course_categories WHERE id = '".$cat->category."'";
						$get_path = get_record_sql($query);
						// explode path values into an array for accurate comparison
						$path_ids = explode('/',$get_path->path);

						if (in_array($search_curriculum_areas,$path_ids)) {
							$curric_courses[] = $cat->id;
						}
						
					}
				}

				// convert filtered courses array to csv string
				if (count($curric_courses) > 0) {
					$curriculum_areas_found = implode(",", $curric_courses);

					// If we've found courses under the curriculum areas category, lets display them.
					$sql = 'SELECT DISTINCT c.id, c.shortname FROM '.$CFG->prefix.'course c, '.
						  $CFG->prefix.'feedback_value fv, '.$CFG->prefix.'feedback_item fi '.
						  'WHERE c.id = fv.course_id 
						  AND fi.id = fv.item 
						  AND fi.feedback = '.$feedback->id.'
						  AND c.id IN ('.$curriculum_areas_found.') 
						  AND (c.shortname '.sql_ilike().' \'%'.$searchcourse.'%\'
						  OR c.fullname '.sql_ilike().' \'%'.$searchcourse.'%\')';
					
					if ($courses = get_records_sql_menu($sql)) {
						echo '<div class="filter_curriculum_course">Course: ';
						$in_charge = ($coursefilter == "0" && (!in_array($courseid, $invalid_cids)) && $filter_choice == 'filter_course') ? $courseid : $coursefilter;
						choose_from_menu($courses, 'coursefilter', $in_charge, 'choose', 'this.form.submit()');
						echo '</div>';
					}
				} else {
					echo '<p><b>No courses found</b></p>';
				}
				
			}
			
			echo '<br class="clear_both" /></div>';
			


			if ($filter_choice == "" || $filter_choice == "filter_course") {
			
				$show_course = ($filter_choice == "filter_course") ? 'style="display:block;" ' : '';
				echo '<div id="course_holder"'.$show_course.'>';
					
				// nkowald - 2009-09-29 - Added DISTINCT to query to improve performance
				$sql = 'select DISTINCT c.id, c.shortname from '.$CFG->prefix.'course c, '.
													  $CFG->prefix.'feedback_value fv, '.$CFG->prefix.'feedback_item fi '.
													  'where c.id = fv.course_id 
													  AND fi.id = fv.item 
													  AND fi.feedback = '.$feedback->id.' '.
													  'and 
													  (c.shortname '.sql_ilike().' \'%'.$searchcourse.'%\'
													  OR c.fullname '.sql_ilike().' \'%'.$searchcourse.'%\')';
			
				if ($courses = get_records_sql_menu($sql)) {

					 echo get_string('filter_by_course', 'feedback') . ': ';
					 $in_charge = ($coursefilter == "0" && (!in_array($courseid, $invalid_cids)) && $filter_choice == 'filter_course') ? $courseid : $coursefilter;
					 choose_from_menu($courses, 'coursefilter', $in_charge, 'choose', 'this.form.submit()');
					 echo '<br /><br />';
				}

				
			} else {
				echo '<div id="loading_msg"></div>';
			}
			
			echo '</div>';
			
			$filter_gender_both = (isset($filter_gender) && ($filter_gender == '')) ? ' checked="checked"' : '';
			$filter_gender_male = (isset($filter_gender) && ($filter_gender == '1')) ? ' checked="checked"' : '';
			$filter_gender_female = (isset($filter_gender) && ($filter_gender == '2')) ? ' checked="checked"' : '';
			echo '
			<table id="secondary_filter">
				<tr>
					<td>
				';
			echo 'Gender:</td><td> 
			<input type="radio" name="filter_gender" id="filter_gender_both" value="" '.$filter_gender_both.' onClick="this.form.submit()" /><label for="filter_gender_both">Both</label>
			<input type="radio" name="filter_gender" id="filter_gender_male" value="1" '.$filter_gender_male.' onClick="this.form.submit()" /><label for="filter_gender_male">Male</label>';
			echo '&nbsp;';
			echo '<input type="radio" name="filter_gender" id="filter_gender_female" value="2" '.$filter_gender_female.' onClick="this.form.submit()" /><label for="filter_gender_female">Female</label>
				</td></tr>';

			// Age filter
			$filter_age_all = (isset($filter_age) && ($filter_age == '')) ? ' checked="checked"' : '';
			$filter_age_14_16 = (isset($filter_age) && ($filter_age == '1')) ? ' checked="checked"' : '';
			$filter_age_16_19 = (isset($filter_age) && ($filter_age == '2')) ? ' checked="checked"' : '';
			$filter_age_20_25 = (isset($filter_age) && ($filter_age == '3')) ? ' checked="checked"' : '';
			$filter_age_26 = (isset($filter_age) && ($filter_age == '4')) ? ' checked="checked"' : '';
			
			echo '<tr><td>Age:</td><td>
			<input type="radio" name="filter_age" id="filter_age_all" value="" '.$filter_age_all.' onClick="this.form.submit()" /><label for="filter_age_all">All Ages</label>
			<input type="radio" name="filter_age" id="filter_age_14_16" value="1" '.$filter_age_14_16.' onClick="this.form.submit()" /><label for="filter_age_14_16">14-16</label>
			<input type="radio" name="filter_age" id="filter_age_16_19" value="2" '.$filter_age_16_19.' onClick="this.form.submit()" /><label for="filter_age_16_19">16-19</label>
			<input type="radio" name="filter_age" id="filter_age_20_25" value="3" '.$filter_age_20_25.' onClick="this.form.submit()" /><label for="filter_age_20_25">20-25</label>
			<input type="radio" name="filter_age" id="filter_age_26" value="4" '.$filter_age_26.' onClick="this.form.submit()" /><label for="filter_age_26">26+</label>
			</td></tr>';
			
			// Attendance filter
			
			$filter_attend = (isset($filter_attendance) && ($filter_attendance == '')) ? ' checked="checked"' : '';
			$filter_attend_ft = (isset($filter_attendance) && ($filter_attendance == '1')) ? ' checked="checked"' : '';
			$filter_attend_pt = (isset($filter_attendance) && ($filter_attendance == '2')) ? ' checked="checked"' : '';
			
			echo '<tr><td>Attendance:</td>
				<td>
			<input type="radio" name="filter_attendance" value="" '.$filter_attend.' id="filter_attendance_all" onClick="this.form.submit()" /><label for="filter_attendance_all">All</label>
			<input type="radio" name="filter_attendance" value="1" '.$filter_attend_ft.' id="filter_attendance_full_time" onClick="this.form.submit()" /><label for="filter_attendance_full_time">Full Time</label>
			<input type="radio" name="filter_attendance" value="2" '.$filter_attend_pt.' id="filter_attendance_part_time" onClick="this.form.submit()" /><label for="filter_attendance_part_time">Part Time Day</label></td></tr>';
			
			$filter_ethnic = (isset($filter_ethnicity) && ($filter_ethnicity == '')) ? ' selected="selected"' : '';
			$filter_ethnic_1 = (isset($filter_ethnicity) && ($filter_ethnicity == 1)) ? ' selected="selected"' : '';
			$filter_ethnic_2 = (isset($filter_ethnicity) && ($filter_ethnicity == 2)) ? ' selected="selected"' : '';
			$filter_ethnic_3 = (isset($filter_ethnicity) && ($filter_ethnicity == 3)) ? ' selected="selected"' : '';
			$filter_ethnic_4 = (isset($filter_ethnicity) && ($filter_ethnicity == 4)) ? ' selected="selected"' : '';
			$filter_ethnic_5 = (isset($filter_ethnicity) && ($filter_ethnicity == 5)) ? ' selected="selected"' : '';
			$filter_ethnic_6 = (isset($filter_ethnicity) && ($filter_ethnicity == 6)) ? ' selected="selected"' : '';
			$filter_ethnic_7 = (isset($filter_ethnicity) && ($filter_ethnicity == 7)) ? ' selected="selected"' : '';
			$filter_ethnic_8 = (isset($filter_ethnicity) && ($filter_ethnicity == 8)) ? ' selected="selected"' : '';
			$filter_ethnic_9 = (isset($filter_ethnicity) && ($filter_ethnicity == 9)) ? ' selected="selected"' : '';
			$filter_ethnic_10 = (isset($filter_ethnicity) && ($filter_ethnicity == 10)) ? ' selected="selected"' : '';
			$filter_ethnic_11 = (isset($filter_ethnicity) && ($filter_ethnicity == 11)) ? ' selected="selected"' : '';
			$filter_ethnic_12 = (isset($filter_ethnicity) && ($filter_ethnicity == 12)) ? ' selected="selected"' : '';
			$filter_ethnic_13 = (isset($filter_ethnicity) && ($filter_ethnicity == 13)) ? ' selected="selected"' : '';
			$filter_ethnic_14 = (isset($filter_ethnicity) && ($filter_ethnicity == 14)) ? ' selected="selected"' : '';
			$filter_ethnic_15 = (isset($filter_ethnicity) && ($filter_ethnicity == 15)) ? ' selected="selected"' : '';
			$filter_ethnic_16 = (isset($filter_ethnicity) && ($filter_ethnicity == 16)) ? ' selected="selected"' : '';
			
			// Ethnicity Filter
			echo '<tr><td>Ethnic Origin:</td>
			<td>
			<select name="filter_ethnicity" onChange="this.form.submit()">
				<option value="" '.$filter_ethnic.'>Choose...</option>
				<option value="1" '.$filter_ethnic_1.'>Asian or Asian British - Bangladeshi</option>
				<option value="2" '.$filter_ethnic_2.'>Asian or Asian British - Indian</option>
				<option value="3" '.$filter_ethnic_3.'>Asian or Asian British - Pakistani</option>
				<option value="4" '.$filter_ethnic_4.'>Asian or Asian British - any other background</option>
				<option value="5" '.$filter_ethnic_5.'>Black or Black British - African</option>
				<option value="6" '.$filter_ethnic_6.'>Black or Black British - Caribbean</option>
				<option value="7" '.$filter_ethnic_7.'>Black or Black British - any other background</option>
				<option value="8" '.$filter_ethnic_8.'>Chinese</option>
				<option value="9" '.$filter_ethnic_9.'>Mixed - White & Asian</option>
				<option value="10" '.$filter_ethnic_10.'>Mixed - White & Black African</option>
				<option value="11" '.$filter_ethnic_11.'>Mixed - White & Black Caribbean</option>
				<option value="12" '.$filter_ethnic_12.'>Mixed - Any Other Mixed Background</option>
				<option value="13" '.$filter_ethnic_13.'>White - British</option>
				<option value="14" '.$filter_ethnic_14.'>White - Irish</option>
				<option value="15" '.$filter_ethnic_15.'>White - Any Other Background</option>
				<option value="16" '.$filter_ethnic_16.'>Other - Any Other</option>
			</select>
				</td></tr>';

			// Declared Learning Difficulty
			$filter_ld_checked = (isset($filter_learning_difficulty) && ($filter_learning_difficulty == '')) ? ' checked="checked"' : '';
			$filter_ld_checked_yes = (isset($filter_learning_difficulty) && ($filter_learning_difficulty == '1')) ? ' checked="checked"' : '';
			$filter_ld_checked_no = (isset($filter_learning_difficulty) && ($filter_learning_difficulty == '2')) ? ' checked="checked"' : '';
			
			echo '<tr><td>
			Declared Learning Difficulty:</td><td>
			<input type="radio" name="filter_learning_difficulty" value="" id="filter_ld" '.$filter_ld_checked.' onClick="this.form.submit()" /><label for="filter_ld">All</label>
			<input type="radio" name="filter_learning_difficulty" value="1" id="filter_ld_yes" '.$filter_ld_checked_yes.' onClick="this.form.submit()" /><label for="filter_ld_yes">Yes</label>
			<input type="radio" name="filter_learning_difficulty" value="2" id="filter_ld_no" '.$filter_ld_checked_no.' onClick="this.form.submit()" /><label for="filter_ld_no">No</label></td></tr>';
			
			// Declared Learning Difficulty
			$filter_ldb_checked = (isset($filter_learning_disability) && ($filter_learning_disability == '')) ? ' checked="checked"' : '';
			$filter_ldb_checked_yes = (isset($filter_learning_disability) && ($filter_learning_disability == '1')) ? ' checked="checked"' : '';
			$filter_ldb_checked_no = (isset($filter_learning_disability) && ($filter_learning_disability == '2')) ? ' checked="checked"' : '';
			
			echo '<tr><td>
			Declared Disability:</td><td>
			<input type="radio" name="filter_learning_disability" value="" id="filter_ldb" '.$filter_ldb_checked.' onClick="this.form.submit()" /><label for="filter_ldb">All</label>
			<input type="radio" name="filter_learning_disability" value="1" id="filter_ldb_yes" '.$filter_ldb_checked_yes.' onClick="this.form.submit()" /><label for="filter_ldb_yes">Yes</label>
			<input type="radio" name="filter_learning_disability" value="2" id="filter_ldb_no" '.$filter_ldb_checked_no.' onClick="this.form.submit()" /><label for="filter_ldb_no">No</label>
			</td></tr></table>
			</td></tr>	
			</table>';
			
			$itemnr = 0;
			//print the items in an analysed form

			// get the number of the item for the current feedback survey
			$query = "SELECT id FROM ".$CFG->prefix."feedback_item WHERE feedback = ".$feedback->id." AND name = 'Gender'";
			$id_of_gender = get_records_sql($query);
			foreach ($id_of_gender as $gender) {
				$gender_id = $gender->id;
			}
			
			// get the number of the item for the current feedback survey
			$query = "SELECT id FROM ".$CFG->prefix."feedback_item WHERE feedback = ".$feedback->id." AND name = 'Age'";
			$id_of_age = get_records_sql($query);
			foreach ($id_of_age as $age) {
				$age_id = $age->id;
			}
			
			// get the number of the item for the current feedback survey
			$query = "SELECT id FROM ".$CFG->prefix."feedback_item WHERE feedback = ".$feedback->id." AND name LIKE ('%ethnic%')";
			$id_of_ethnic = get_records_sql($query);
			foreach ($id_of_ethnic as $ethnic) {
				$ethnic_id = $ethnic->id;
			}

			// get the number of the item for the current feedback survey
			$query = "SELECT id FROM ".$CFG->prefix."feedback_item WHERE feedback = ".$feedback->id." AND name = 'Attendance'";
			$id_of_attendance = get_records_sql($query);
			foreach ($id_of_attendance as $attendance) {
				$attendance_id = $attendance->id;
			}

			// get the number of the item for the current feedback survey
			$query = "SELECT id FROM ".$CFG->prefix."feedback_item WHERE feedback = ".$feedback->id." AND name LIKE ('%Learning Difficulty%')";
			$id_of_dld = get_records_sql($query);
			foreach ($id_of_dld as $dld) {
				$dld_id = $dld->id;
			}
			//
			// get the number of the item for the current feedback survey
			$query = "SELECT id FROM ".$CFG->prefix."feedback_item WHERE feedback = ".$feedback->id." AND name LIKE ('%Disability%')";
			$id_of_dldb = get_records_sql($query);
			foreach ($id_of_dldb as $dldb) {
				$dldb_id = $dldb->id;
			}

			
			// Gender Filter
			$gender = ($filter_gender != '') ? $filter_gender : '';
			$ubg = array(); // users by gender array

			// Age Filter
			$age = ($filter_age != '') ? $filter_age  : '';
			$uba = array(); // users by age array

			// Ethnicity Filter
			$ethnic = ($filter_ethnicity != '') ? $filter_ethnicity : '';
			$ube = array(); // users by ethnicity array

			// Attendance Filter
			$attend = ($filter_attendance != '') ? $filter_attendance : '';
			$ubat = array();

			// Declared Learning Difficulty Fitler
			$dld = ($filter_learning_difficulty != '') ? $filter_learning_difficulty : '';
			$ubdld = array();

			// Declared Disability Fitler
			$dldb = ($filter_learning_disability != '') ? $filter_learning_disability : '';
			$ubdldb = array();

			$completed_ids_to_search = array();
			
			if (($gender != '' && $gender_id != '')) {
				// Gender ONLY
				$query = "SELECT completed FROM ".$CFG->prefix."feedback_value WHERE item = ".$gender_id." and value = ".$gender."";
				$users_by_gender = get_records_sql($query);
				foreach ($users_by_gender as $user) {
					$ubg[] = $user->completed;
				}	
				$completed_ids_to_search = $ubg;
			}
			if (($age != '' && $age_id != '')) {
				// Age ONLY
				$query = "SELECT completed FROM ".$CFG->prefix."feedback_value WHERE item = ".$age_id." and value = ".$age."";
				$users_by_age = get_records_sql($query);
				foreach ($users_by_age as $user) {
					$uba[] = $user->completed;
				}
				$completed_ids_to_search = $uba;
			}
			if (($ethnic != '' && $ethnic_id != '')) {
				// Ethnicity ONLY
				$query = "SELECT completed FROM ".$CFG->prefix."feedback_value WHERE item = ".$ethnic_id." and value = ".$ethnic."";
				$users_by_ethnic = get_records_sql($query);
				foreach ($users_by_ethnic as $user) {
					$ube[] = $user->completed;
				}
				$completed_ids_to_search = $ube;
			}
			if (($attend != '' && $attendance_id != '')) {
				// Attendance ONLY	
				$query = "SELECT completed FROM ".$CFG->prefix."feedback_value WHERE item = ".$attendance_id." and value = ".$attend."";
				$users_by_attendance = get_records_sql($query);
				foreach ($users_by_attendance as $user) {
					$ubat[] = $user->completed;
				}
				$completed_ids_to_search = $ubat;
			}
			if (($dld != '' && $dld_id != '')) {
				// Declared Learning Difficulty ONLY	
				$query = "SELECT completed FROM ".$CFG->prefix."feedback_value WHERE item = ".$dld_id." and value = ".$dld."";
				$users_by_dld = get_records_sql($query);
				foreach ($users_by_dld as $user) {
					$ubdld[] = $user->completed;
				}
				$completed_ids_to_search = $ubdld;
			}
			if (($dldb != '' && $dldb_id != '')) {
				// Declared Disability ONLY	
				$query = "SELECT completed FROM ".$CFG->prefix."feedback_value WHERE item = ".$dldb_id." and value = ".$dldb."";
				$users_by_dldb = get_records_sql($query);
				foreach ($users_by_dldb as $user) {
					$ubdldb[] = $user->completed;
				}
				$completed_ids_to_search = $ubdldb;
			}

			// This needs to intersect all non-empty arrays top-down
			$filter_count = 0;
			$to_intersect = array();

			if (count($ubg) > 0) {
				$filter_count++;
				$to_intersect[] = $ubg;
			}
			if (count($uba) > 0) {
				$filter_count++;
				$to_intersect[] = $uba;
			}
			if (count($ube) > 0) {
				$filter_count++;
				$to_intersect[] = $ube;
			}
			if (count($ubat) > 0) {
				$filter_count++;
				$to_intersect[] = $ubat;
			}
			if (count($ubdld) > 0) {
				$filter_count++;
				$to_intersect[] = $ubdld;
			}
			if (count($ubdldb) > 0) {
				$filter_count++;
				$to_intersect[] = $ubdldb;
			}

			// If two or more filters active: intersect these arrays
			switch ($filter_count) {

				case 0:
				// do nothing
				break;	
				
				case 1:
				// do nothing
				break;

				case 2:
				$completed_ids_to_search = array_intersect($to_intersect[0],$to_intersect[1]);
				break;

				case 3:
				$completed_ids_to_search = array_intersect($to_intersect[0],$to_intersect[1]);
				$completed_ids_to_search = array_intersect($completed_ids_to_search,$to_intersect[2]);
				break;

				case 4:
				$completed_ids_to_search = array_intersect($to_intersect[0],$to_intersect[1]);
				$completed_ids_to_search = array_intersect($completed_ids_to_search,$to_intersect[2]);
				$completed_ids_to_search = array_intersect($completed_ids_to_search,$to_intersect[3]);
				break;

				case 5:
				$completed_ids_to_search = array_intersect($to_intersect[0],$to_intersect[1]);
				$completed_ids_to_search = array_intersect($completed_ids_to_search,$to_intersect[2]);
				$completed_ids_to_search = array_intersect($completed_ids_to_search,$to_intersect[3]);
				$completed_ids_to_search = array_intersect($completed_ids_to_search,$to_intersect[4]);
				break;

				case 6:
				$completed_ids_to_search = array_intersect($to_intersect[0],$to_intersect[1]);
				$completed_ids_to_search = array_intersect($completed_ids_to_search,$to_intersect[2]);
				$completed_ids_to_search = array_intersect($completed_ids_to_search,$to_intersect[3]);
				$completed_ids_to_search = array_intersect($completed_ids_to_search,$to_intersect[4]);
				$completed_ids_to_search = array_intersect($completed_ids_to_search,$to_intersect[5]);
				break;

			}


			// Create and clause based on filters selected
			$and_clause = '';

			$in_charge = ($coursefilter == "0" && (!in_array($courseid, $invalid_cids)) && $filter_choice == 'filter_course') ? $courseid : $coursefilter;
			if ($in_charge != 0 && $in_charge != '') {
				$and_clause .= ' AND fbv.course_id = '.$in_charge.' ';
			}

			// Build completed and clause if filters set
			if ($gender != '' || $age != '' || $ethnic != '' || $attend != '' || $dld != '') {
				$completed_ids = implode(',', $completed_ids_to_search); // convert array to csv format
				$and_clause .= ' AND fbv.completed IN ('.$completed_ids.')';
			}

			if ($search_directorates > 0) {
		
				$courses_to_search = implode(',', $direct_courses);
				$and_clause .= ' AND fbv.course_id IN ('.$courses_to_search.')';
			
			} elseif ($search_sectors > 0) {
			
				$courses_to_search = implode(',',$sect_courses);
				$and_clause .= ' AND fbv.course_id IN ('.$courses_to_search.')';
				
			} elseif ($search_levels != '0' && $search_levels != '') {
				
				$courses_to_search = implode(',',$level_courses);
				$and_clause .= ' AND fbv.course_id IN ('.$courses_to_search.')';
				
			} elseif ($search_curriculum_areas > 0 && count($curric_courses) > 0) {

				$courses_to_search = implode(',',$curric_courses);
				$and_clause .= ' AND fbv.course_id IN ('.$courses_to_search.')';
			}

			$_SESSION['and_clause'] = $and_clause;

			echo '</form>';

			// nkowald - 2009-12-08 - Had to move export button below filters as required filter code for export
			if ($capabilities->viewreports) {
				// export to excel button
				echo '<div style="text-align:center;" class="bogus">';
				$export_button_link = 'analysis_to_excel.php';
				$in_charge = ($coursefilter == "0" && (!in_array($courseid, $invalid_cids)) && $filter_choice == 'filter_course') ? $courseid : $coursefilter;
				$export_button_options = array('sesskey'=>$USER->sesskey, 'id'=>$id, 'coursefilter'=>$in_charge, 'and_clause'=>$and_clause);
				$export_button_label = get_string('export_to_excel', 'feedback');
				print_single_button($export_button_link, $export_button_options, $export_button_label, 'post');
			}


			echo '<hr />';
			
			$in_charge = ($coursefilter == "0" && (!in_array($courseid, $invalid_cids)) && $filter_choice == 'filter_course') ? $courseid : $coursefilter;
			
			$no_feedback_error = 'No feedback exists for this course.';

			// Build completed where clause if age or gender filters set
			if ($gender != '' || $age != '' || $ethnic != '' || $attend != '' || $dld != '') {
				$completed_ids = implode(',', $completed_ids_to_search); // convert array to csv format
				$where_clause .= ' AND completed IN ('.$completed_ids.')';
				$no_feedback_error = 'No results match this level of filtering, please redefine your filter options.';
			}

			if ($in_charge != 0 && $in_charge != '') { 
				$where_clause .= ' AND course_id = '.$in_charge.'';
			}

			if ($search_directorates > 0) {
		
				if ($in_charge == "0") {
					$courses_to_search = implode(',', $direct_courses);
					$where_clause .= ' AND course_id IN ('.$courses_to_search.')';
				}
			
			} elseif ($search_sectors > 0) {
			
				if ($in_charge == "0") {
					$courses_to_search = implode(',',$sect_courses);
					$where_clause .= ' AND course_id IN ('.$courses_to_search.')';
				}
				
			} elseif ($search_levels != '0' && $search_levels != '') {
				
				if ($in_charge == "0") {
					$courses_to_search = implode(',',$level_courses);
					$where_clause .= ' AND course_id IN ('.$courses_to_search.')';
				}
				
			} elseif ($search_curriculum_areas > 0 && count($curric_courses) > 0) {

				if ($in_charge == "0") {
					$courses_to_search = implode(',',$curric_courses);
					$where_clause .= ' AND course_id IN ('.$courses_to_search.')';
				}
			}

			// work out if this course has any feedback against it
			$sql = "SELECT * FROM ".$CFG->prefix."feedback_value WHERE 1=1 $where_clause";
			$has_feedback = FALSE;
			if ($results = get_records_sql($sql)) {
				if (count($has_feedback) > 0) {
					$has_feedback = TRUE;
				}
			}


			if ($has_feedback) {

				foreach($items as $item) {

					if ($item->hasvalue == 0) continue;
					echo '<table width="100%" class="generalbox">';	
					//get the class from item-typ
					$itemclass = 'feedback_item_'.$item->typ;
					//get the instance of the item-class
					$itemobj = new $itemclass();
					$itemnr++;
					$printnr = ($feedback->autonumbering) ? $itemnr.'.' : '';
					
					$where_clause_to_use = '1=1 '. $where_clause .' AND item = '.$item->id.'';

					// this will handle everything now - yay, less lines of code.
					$itemobj->print_analysed($item, $printnr, $mygroupid, $in_charge, $where_clause_to_use);

					if (eregi('rated$', $item->typ)) {
						 echo '<tr><td colspan="2"><a href="#" onclick="setcourseitemfilter('.$item->id.',\''.$item->typ.'\'); return false;">'.
							get_string('sort_by_course', 'feedback').'</a></td></tr>'; 
					}

					echo '</table>';
				}

				/*
				echo '</td></tr>';
				echo '</table></div>';
				 */

			} else {
				echo "<p><b>$no_feedback_error</b></p>";
			}

		}
	}

	echo '</div>';

    print_box_end();
    
    print_footer($course);

?> 

/mod/feedback/lib.php
Last Changed: 10/12/09

Line 601-632
- Added a new function to handle filtered displays

// nkowald - 2009-12-09 - Added a new function to handle filtered displays
/** 
 *  get users which have the complete-capability and match the filters
 *  @param object $cm
 *  @param int $group single groupid
 *  @return object the userrecords
 */
function feedback_get_complete_users_filtered($cm, $and_clause = false) {
    global $CFG;
    
    if (!$context = get_context_instance(CONTEXT_MODULE, $cm->id)) {
            print_error('badcontext');
    }

	$sql = 'SELECT DISTINCT completed FROM mdl_feedback_value fbv WHERE 1=1 '. $and_clause;
	$filtered_users = array();
	if ($completed_users = get_records_sql($sql)) {
		foreach($completed_users as $user) {
			$filtered_users[] = $user->completed;	
		}
	}
	$add_user_filter = '';
	if (count($filtered_users > 0)) {
		$filtered_users_implode = implode(',',$filtered_users);
		$add_user_filter = " AND c.id IN ($filtered_users_implode)";
	}

	$sql = 'SELECT u.* FROM '.$CFG->prefix.'user u, '.$CFG->prefix.'feedback_completed c 
		WHERE u.id = c.userid AND c.feedback = '.$cm->instance.' '.$add_user_filter.' ORDER BY u.lastname';

    return get_records_sql($sql);
}

Line 1488-1543
/** 
 *  get the values of an item depending on the given groupid.
 *  if the feedback is anonymous so the values are shuffled
 *  @param object $item
 *  @param int $groupid
 *  @param int $course_id
	// nkowald - 2009-11-20 - Changed limited $course_id parameter to accept a where clause, easier and more useful now.
 *  @param string $where_clause
 *  @return array the value-records
 */
function feedback_get_group_values($item, $groupid = false, $courseid = false, $where_clause = false){
    global $CFG;

    //if the groupid is given?
    if(intval($groupid) > 0) {
        $query = 'SELECT fbv .  *
                        FROM '.$CFG->prefix . 'feedback_value AS fbv, '.$CFG->prefix . 'feedback_completed AS fbc, '.$CFG->prefix . 'groups_members AS gm
                        WHERE fbv.item = '.$item->id . '
                             AND fbv.completed = fbc.id 
                             AND fbc.userid = gm.userid 
                             AND gm.groupid = '.$groupid . '
                        ORDER BY fbc.timemodified';
        $values = get_records_sql($query);
    } else {
		if ($where_clause !== false && $where_clause != '' ) {
			$where_clause = str_replace('fbv.','',$where_clause);
			$values = get_records_select('feedback_value', $where_clause);
		} elseif ($courseid !== false && $courseid != 0) {
			$values = get_records_select('feedback_value', "item = ".$item->id." AND course_id = $courseid");
		} else {
			$values = get_records('feedback_value', 'item', $item->id);
		}
		/*
        if (($courseid && !$directorateids) || ($courseid && $directorateids)) {
             $values = get_records_select('feedback_value', "item = '$item->id' and course_id = '$courseid'");
        } else if ($directorateids && !$courseid){
             $values = get_records_select('feedback_value', "item = '$item->id' AND course_id IN ($directorateids)");
        } else {
             $values = get_records('feedback_value', 'item', $item->id);
        }
		*/
    }    
    if(get_field('feedback', 'anonymous', 'id', $item->feedback) == FEEDBACK_ANONYMOUS_YES) {
        if(is_array($values))
            shuffle($values);
    }
	return $values;
}

Line 1604-1657
/** 
 *  get the completeds depending on the given groupid.
 *  @param object $feedback
 *  @param int $groupid
 *  @return mixed array of found completeds otherwise false
 */

// nkowald - 2009-12-04 - Added the $and_clause as a way to show custom filters
function feedback_get_completeds_group($feedback, $groupid = false, $courseid = false, $and_clause = false) {
    global $CFG;
    if (intval($groupid) > 0){
        $query = 'SELECT fbc.*
                        FROM '.$CFG->prefix . 'feedback_completed AS fbc, '.$CFG->prefix . 'groups_members AS gm
                        WHERE  fbc.feedback = '.$feedback->id . '
                            AND gm.groupid = '.$groupid . '
                            AND fbc.userid = gm.userid';
        if($values = get_records_sql($query)) {
            return $values;
        }else {return false;}
    }else {
		 if ($and_clause !== false && $and_clause != '') {
			// nkowald - added this and_clause
            $query = 'SELECT DISTINCT fbc.*
                        FROM '.$CFG->prefix . 'feedback_completed AS fbc, '.$CFG->prefix . 'feedback_value AS fbv
                        WHERE fbc.id = fbv.completed
                            AND fbc.feedback = '.$feedback->id . 
							$and_clause . ' 
                        ORDER BY random_response';
            if ($values = get_records_sql($query)) {
                return $values;
            } else {
                return false;
            }

		} elseif($courseid !== false && $courseid != 0) {
            $query = 'SELECT DISTINCT fbc.*
                        FROM '.$CFG->prefix . 'feedback_completed AS fbc, '.$CFG->prefix . 'feedback_value AS fbv
                        WHERE fbc.id = fbv.completed
                            AND fbc.feedback = '.$feedback->id . '
                            AND fbv.course_id = '.$courseid . '
                        ORDER BY random_response';
            if ($values = get_records_sql($query)) {
                return $values;
            } else {
                return false;
            }

		} else {
            if($values = get_records('feedback_completed', 'feedback', $feedback->id)){
                return $values;
            }else{return false;}
        }
    }
}

/mod/feedback/view.php
Last Changed: 18/11/09

- Removed this mapping button, can’t remember why

Line 141-162

//####### mapcourse-start
    if($capabilities->mapcourse) {
        if($feedback->course == SITEID) {
            // print_simple_box_start('center', '80%');
			// nkowald - 2009-11-16 - Removed Mapping buttons as it was removing the ques
			/*
            print_box_start('generalbox boxaligncenter boxwidthwide');
            echo '<div align="center">';
            echo '<form action="mapcourse.php" method="get">';
            echo '<input type="hidden" name="sesskey" value="'.$USER->sesskey.'" />';
            echo '<input type="hidden" name="id" value="'.$id.'" />';
            echo '<button type="submit">'.get_string('mapcourses', 'feedback').'</button>';
            helpbutton('mapcourse', '', 'feedback', true, true);
            echo '</form>';
            echo '<br />';
            echo '</div>';
            // print_simple_box_end();
            print_box_end();
			*/
        }
    }
    //####### mapcourse-end

Other files changed but not commented – naughty, naughty
/mod/feedback/item/multichoice/lib.php
/mod/feedback/item/multichoicerated/lib.php
/mod/feedback/item/numeric/lib.php
/mod/feedback/item/textarea/lib.php
/mod/feedback/item/textfield/lib.php

- Instead of searching and documenting these changes, look for files in folder



/mod/ilpconcern/lib.php
Last Changed: 12/11/09

- Fixing bug buy converting maxeditingtime value to unixtime – which is what condition checks against

Line 226-227
	// nkowald - 2009-11-12 - We need to convert maxediting to unixtime so the below conditions work as they were intended!
	$CFG->maxeditingtime = ($CFG->maxeditingtime * 60 * 60) + $report->timecreated; // convert hours format to seconds, add to time created value


/mod/resource/type/file/resource.class.php
Last Changed: 17/09/09

- Updated the urls so that they fetch the latest file from the server – added a get parameter so they don’t cache

Line 724-728
// nkowald - 2009-09-17 - Need to create a way to get latest file from server and not from cache
			// get date + time
			$date_time = date('YmdHis');
			//redirect($fullurl);
            redirect($fullurl . '?nocache=' . $date_time);


/user/index.php
Last Changed: 07/01/10

- Changed the default role to show; now shows students – still have the option to view elearning technologists

Line 19-21
	// nkowald - 2010-01-06 - We only want to see students here, so remove other role types
	if ($_GET['roleid'] == NULL && $roleid == 0) { $roleid = 5; }
	// nkowald

Line 93-99
	// nkowald - 2010-06-03 - Add Teachers to current role list
	foreach ($avoidroles as $key => $role) {
		if ($role == 3) {
			unset($avoidroles[$key]);
		}
	}
	$rolenames[3] = 'Teacher';


/mod/questionnaire/questions_form.php
Last Changed: 22/02/10

- Updated the edit and delete icons for consistency throughout Moodle

Line 154-159

                } else {
	        // nkowald - 2010-02-22 - Changed icon so it's consistent throughout Moodle
                    $esrc = $CFG->wwwroot.'/theme/conel/pix/t/edit.gif';
                }
	    // nkowald - 2010-02-22 - Changed icon so it's consistent throughout Moodle
                $rsrc = $CFG->wwwroot.'/theme/conel/pix/t/delete.gif';


/theme/standard/styles_ie6.css
Last Changed: 12/03/10

- Updated the edit IE6 styles to fix a bug where the “add a resource” drop-downs were not appearing in courses.
Fixed using this bug fix: http://tracker.moodle.org/browse/MDL-16940

Line 68-71

div.block_adminblock div.header div.title {
	display:block;
	padding-top:14px;
}

